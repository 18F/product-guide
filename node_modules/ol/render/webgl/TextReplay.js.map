{"version":3,"file":"TextReplay.js","sources":["../../../../src/ol/render/webgl/TextReplay.js"],"sourcesContent":["/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {import(\"../../style/AtlasManager.js\").default} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nclass WebGLTextReplay extends WebGLTextureReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    if (this.text_) {\n      let flatCoordinates = null;\n      const offset = 0;\n      let end = 2;\n      let stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      const glyphAtlas = this.currAtlas_;\n      const lines = this.text_.split('\\n');\n      const textSize = this.getTextSize_(lines);\n      let i, ii, j, jj, currX, currY, charArr, charInfo;\n      const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            const image = charInfo.image;\n\n            this.anchorX = anchorX - currX;\n            this.anchorY = anchorY - currY;\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this.originY = charInfo.offsetY;\n            this.height = glyphAtlas.height;\n            this.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this.imageHeight = image.height;\n            this.imageWidth = image.width;\n\n            if (this.images_.length === 0) {\n              this.images_.push(image);\n            } else {\n              const currentImage = this.images_[this.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this.groupIndices.push(this.indices.length);\n                this.images_.push(image);\n              }\n            }\n\n            this.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this.width;\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  getTextSize_(lines) {\n    const self = this;\n    const glyphAtlas = this.currAtlas_;\n    const textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    const textWidth = lines.map(function(str) {\n      let sum = 0;\n      for (let i = 0, ii = str.length; i < ii; ++i) {\n        const curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  }\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    for (let i = offset, ii = end; i < ii; i += stride) {\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  addCharToAtlas_(char) {\n    if (char.length === 1) {\n      const glyphAtlas = this.currAtlas_;\n      const state = this.state_;\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /** @type {CanvasLineCap} */ (state.lineCap);\n          ctx.lineJoin = /** @type {CanvasLineJoin} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    const gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    const texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    super.finish(context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle) {\n    const state = this.state_;\n    const textFillStyle = textStyle.getFill();\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        const lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {GlyphAtlas} Glyph atlas.\n   */\n  getAtlas_(state) {\n    let params = [];\n    for (const i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    const hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  }\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  calculateHash_(params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    let hash = '';\n    for (let i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTextures(opt_all) {\n    return this.textures_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionTextures() {\n    return this.textures_;\n  }\n}\n\n\nexport default WebGLTextReplay;\n"],"names":["super","let","const"],"mappings":"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"}