{"version":3,"file":"PolygonReplay.js","sources":["../../../../src/ol/render/webgl/PolygonReplay.js"],"sourcesContent":["/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './polygonreplay/defaultshader.js';\nimport Locations from './polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLReplay from './Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {PolygonVertex} p0\n * @property {PolygonVertex} p1\n */\n\n\nclass WebGLPolygonReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./polygonreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawCoordinates_(flatCoordinates, holeFlatCoordinates, stride) {\n    // Triangulate the polygon\n    const outerRing = new LinkedList();\n    const rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    const maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      let i, ii;\n      const holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        const holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        const currList = holeLists[i].list;\n        const start = currList.firstItem();\n        let currItem = start;\n        let intersection;\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  }\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  processFlatCoordinates_(flatCoordinates, stride, list, rtree, clockwise) {\n    const isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    let i, ii;\n    let n = this.vertices.length / 2;\n    /** @type {PolygonVertex} */\n    let start;\n    /** @type {PolygonVertex} */\n    let p0;\n    /** @type {PolygonVertex} */\n    let p1;\n    const extents = [];\n    const segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      const end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  }\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  getMaxCoords_(list) {\n    const start = list.firstItem();\n    let seg = start;\n    let maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  }\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  classifyPoints_(list, rtree, ccw) {\n    let start = list.firstItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let pointsReclassified = false;\n    do {\n      const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  bridgeHole_(hole, holeMaxX, list, listMaxX, rtree) {\n    let seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    const p1 = seg.p1;\n    /** @type {PolygonVertex} */\n    const p2 = {x: listMaxX, y: p1.y, i: -1};\n    let minDist = Infinity;\n    let i, ii, bestPoint;\n    /** @type {PolygonVertex} */\n    let p5;\n\n    const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      const currSeg = intersectingSegments[i];\n      const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      const dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        let theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          const currPoint = pointsInTriangle[i];\n          const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  triangulate_(list, rtree) {\n    let ccw = false;\n    let simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this.resolveSelfIntersections_(list, rtree)) {\n              simple = this.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this.isClockwise_(list);\n                this.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      let numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  clipEars_(list, rtree, simple, ccw) {\n    let numIndices = this.indices.length;\n    let start = list.firstItem();\n    let s0 = list.getPrevItem();\n    let s1 = start;\n    let s2 = list.nextItem();\n    let s3 = list.getNextItem();\n    let p0, p1, p2;\n    let processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        let variableCriterion;\n        if (simple) {\n          variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this.indices[numIndices++] = p0.i;\n            this.indices[numIndices++] = p1.i;\n            this.indices[numIndices++] = p2.i;\n            this.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  resolveSelfIntersections_(list, rtree, opt_touch) {\n    const start = list.firstItem();\n    list.nextItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let resolvedIntersections = false;\n\n    do {\n      const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        let breakCond = false;\n        const numVertices = this.vertices.length;\n        let numIndices = this.indices.length;\n        const n = numVertices / 2;\n        const seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        let p;\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this.indices[numIndices++] = seg.p0.i;\n        this.indices[numIndices++] = seg.p1.i;\n        this.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  isSimple_(list, rtree) {\n    const start = list.firstItem();\n    let seg = start;\n    do {\n      if (this.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  isClockwise_(list) {\n    const length = list.getLength() * 2;\n    const flatCoordinates = new Array(length);\n    const start = list.firstItem();\n    let seg = start;\n    let i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  splitPolygon_(list, rtree) {\n    const start = list.firstItem();\n    let s0 = start;\n    do {\n      const intersections = this.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        const s1 = intersections[0];\n        const n = this.vertices.length / 2;\n        const intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        const p = this.createPoint_(intersection[0], intersection[1], n);\n        const newPolygon = new LinkedList();\n        const newRtree = new RBush();\n        this.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        let currItem = list.nextItem();\n        while (currItem !== s1) {\n          this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this.classifyPoints_(list, rtree, false);\n        this.triangulate_(list, rtree);\n        this.classifyPoints_(newPolygon, newRtree, false);\n        this.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  }\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {PolygonVertex} List item.\n   */\n  createPoint_(x, y, i) {\n    let numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {PolygonVertex} */\n    const p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  }\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point of segment.\n   * @param {PolygonVertex} p1 Second point of segment.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default=} opt_rtree Insert the segment into the R-Tree.\n   * @return {PolygonSegment} segment.\n   */\n  insertItem_(p0, p1, list, opt_rtree) {\n    const seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  }\n\n  /**\n    * @private\n    * @param {PolygonSegment} s0 Segment before the remove candidate.\n    * @param {PolygonSegment} s1 Remove candidate segment.\n    * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n    * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n    */\n  removeItem_(s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  }\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<PolygonVertex>} Points in the triangle.\n   */\n  getPointsInTriangle_(p0, p1, p2, rtree, opt_reflex) {\n    const result = [];\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (const j in segmentsInExtent[i]) {\n        const p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {PolygonSegment} segment Segment.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<PolygonSegment>} Intersecting segments.\n   */\n  getIntersections_(segment, rtree, opt_touch) {\n    const p0 = segment.p0;\n    const p1 = segment.p1;\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    const result = [];\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      const currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  calculateIntersection_(p0, p1, p2, p3, opt_touch) {\n    const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {PolygonVertex} p1 Start point of the diagonal.\n   * @param {PolygonVertex} p2 Ear candidate.\n   * @param {PolygonVertex} p3 End point of the diagonal.\n   * @param {PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  diagonalIsInside_(p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const endss = multiPolygonGeometry.getEndss();\n    const stride = multiPolygonGeometry.getStride();\n    const currIndex = this.indices.length;\n    const currLineIndex = this.lineStringReplay.getCurrentIndex();\n    const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    let i, ii, j, jj;\n    let start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      if (ends.length > 0) {\n        const outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n        if (outerRing.length) {\n          const holes = [];\n          let holeFlatCoords;\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const ends = polygonGeometry.getEnds();\n    const stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      const outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, nextStyle);\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  setFillStyle_(gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      const nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        width: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  }\n}\n\n\nexport default WebGLPolygonReplay;\n"],"names":["super","const","let"],"mappings":"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"}