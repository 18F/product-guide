{"version":3,"file":"VectorImageTile.js","sources":["../../src/ol/VectorImageTile.js"],"sourcesContent":["/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nclass VectorImageTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {number} sourceRevision Source revision.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {import(\"./Tile.js\").UrlFunction} tileUrlFunction Tile url function.\n   * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n   * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid of the renderer.\n   * @param {Object<string, import(\"./VectorTile.js\").default>} sourceTiles Source tiles.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {typeof import(\"./VectorTile.js\").default} tileClass Class to\n   *     instantiate for source tiles.\n   * @param {function(this: import(\"./source/VectorTile.js\").default, import(\"./events/Event.js\").default)} handleTileChange\n   *     Function to call when a source tile's state changes.\n   * @param {number} zoom Integer zoom to render the tile for.\n   */\n  constructor(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const resolution = tileGrid.getResolution(zoom);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution);\n      const useLoadedOnly = zoom != tileCoord[0];\n      let loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        let sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        const sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          const sourceTileKey = sourceTileCoord.toString();\n          let sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      const sourceTileKey = this.tileKeys[i];\n      const sourceTile = this.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  }\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {import(\"./VectorTile.js\").default} Source tile.\n   */\n  getTile(tileKey) {\n    return this.sourceTiles_[tileKey];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    let leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    const errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        const sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          const key = listen(sourceTile, EventType.CHANGE, function(e) {\n            const state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              const uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  }\n\n  /**\n   * @private\n   */\n  finishLoading_() {\n    let loaded = this.tileKeys.length;\n    let empty = 0;\n    for (let i = loaded - 1; i >= 0; --i) {\n      const state = this.getTile(this.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  }\n}\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n"],"names":["super","const","let"],"mappings":"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"}