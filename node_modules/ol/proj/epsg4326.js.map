{"version":3,"file":"epsg4326.js","sources":["../../../src/ol/proj/epsg4326.js"],"sourcesContent":["/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n"],"names":["const","super"],"mappings":"AAAA;;;AAGA,OAAO,UAAU,MAAM,iBAAiB,CAAC;AACzC,OAAO,KAAK,MAAM,YAAY,CAAC;;;;;;;;;AAS/B,OAAOA,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC;;;;;;;;;AAS9B,OAAOA,GAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;;;;;;;AAO3C,OAAOA,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC;;;;;;;;;;;AAWtD,IAAM,kBAAkB,GAAmB;EAMzC,2BAAW,CAAC,IAAI,EAAE,mBAAmB,EAAE;IACrCC,eAAK,OAAC;MACJ,IAAI,EAAE,IAAI;MACV,KAAK,EAAE,KAAK,CAAC,OAAO;MACpB,MAAM,EAAE,MAAM;MACd,eAAe,EAAE,mBAAmB;MACpC,MAAM,EAAE,IAAI;MACZ,aAAa,EAAE,eAAe;MAC9B,WAAW,EAAE,MAAM;KACpB,CAAC,CAAC;;;;;;GAEJ;;;EAjB8B,aAmBhC;;;;;;;;;AASD,OAAOD,GAAK,CAAC,WAAW,GAAG;EACzB,IAAI,kBAAkB,CAAC,QAAQ,CAAC;EAChC,IAAI,kBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC;EAC1C,IAAI,kBAAkB,CAAC,4BAA4B,EAAE,KAAK,CAAC;EAC3D,IAAI,kBAAkB,CAAC,+BAA+B,EAAE,KAAK,CAAC;EAC9D,IAAI,kBAAkB,CAAC,+BAA+B,CAAC;EACvD,IAAI,kBAAkB,CAAC,0BAA0B,CAAC;EAClD,IAAI,kBAAkB,CAAC,8CAA8C,EAAE,KAAK,CAAC;EAC7E,IAAI,kBAAkB,CAAC,6BAA6B,EAAE,KAAK,CAAC;CAC7D,CAAC;"}