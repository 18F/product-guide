{"version":3,"file":"PriorityQueue.js","sources":["../../../src/ol/structs/PriorityQueue.js"],"sourcesContent":["/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < (count >> 1)) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex = rIndex < count &&\n          priorities[rIndex] < priorities[lIndex] ?\n        rIndex : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n\n}\n\n\nexport default PriorityQueue;\n"],"names":["const","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,eAAe,CAAC;AACrC,QAAQ,KAAK,OAAO,WAAW,CAAC;;;;;;AAMhC,OAAOA,GAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;AAe7B,IAAM,aAAa,GAMjB,sBAAW,CAAC,gBAAgB,EAAE,WAAW,EAAE;;EAE3C,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;;EAE5C,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;EAElC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;EAEtB,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;EAExB,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;;AAE9B,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;AACH,wBAAE,yBAAK,GAAG;EACR,AAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5B,AAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;EAC9B,AAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAChC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,2BAAO,GAAG;EACV,AAAEA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EAClC,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;EACtC,AAAEA,GAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9B,AAAE,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;IAC1B,AAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACtB,AAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EAC1B,AAAE,CAAC,MAAM;IACP,AAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAC/B,AAAE,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;IACnC,AAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACpB,AAAE,CAAC;EACH,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;EAChD,AAAE,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;EAC1C,AAAE,OAAO,OAAO,CAAC;AACnB,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,2BAAO,CAAC,OAAO,EAAE;EACjB,AAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC;IAC5D,AAAE,EAAE,CAAC,CAAC;EACR,AAAEA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;EACnD,AAAE,IAAI,QAAQ,IAAI,IAAI,EAAE;IACtB,AAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,AAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,AAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1D,AAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/C,AAAE,OAAO,IAAI,CAAC;EAChB,AAAE,CAAC;EACH,AAAE,OAAO,KAAK,CAAC;AACjB,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;AACH,wBAAE,6BAAQ,GAAG;EACX,AAAE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AACjC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,iDAAkB,CAAC,KAAK,EAAE;EAC1B,AAAE,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACzB,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,mDAAmB,CAAC,KAAK,EAAE;EAC3B,AAAE,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACzB,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,2CAAe,CAAC,KAAK,EAAE;EACvB,AAAE,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC5B,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,6BAAQ,GAAG;EACX,AAAEC,GAAG,CAAC,CAAC,CAAC;EACR,AAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,AAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACpB,AAAE,CAAC;AACL,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;AACH,wBAAE,2BAAO,GAAG;EACV,AAAE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;AACvC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,mCAAW,CAAC,GAAG,EAAE;EACjB,AAAE,OAAO,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC;AACvC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,6BAAQ,CAAC,OAAO,EAAE;EAClB,AAAE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACxD,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,2BAAO,CAAC,KAAK,EAAE;EACf,AAAED,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EAClC,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;EACtC,AAAEA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;EAChC,AAAEA,GAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EAClC,AAAEA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,AAAEA,GAAK,CAAC,UAAU,GAAG,KAAK,CAAC;;EAE3B,AAAE,OAAO,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;IAC7B,AAAEA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAChD,AAAEA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;;IAEjD,AAAEA,GAAK,CAAC,iBAAiB,GAAG,MAAM,GAAG,KAAK;QACtC,AAAE,UAAU,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;MAC3C,AAAE,MAAM,GAAG,MAAM,CAAC;;IAEpB,AAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAChD,AAAE,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;IACpD,AAAE,KAAK,GAAG,iBAAiB,CAAC;EAC9B,AAAE,CAAC;;EAEH,AAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;EAC5B,AAAE,UAAU,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;EAC/B,AAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACtC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,wBAAE,+BAAS,CAAC,UAAU,EAAE,KAAK,EAAE;EAC7B,AAAEA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EAClC,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;EACtC,AAAEA,GAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EAClC,AAAEA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;;EAErC,AAAE,OAAO,KAAK,GAAG,UAAU,EAAE;IAC3B,AAAEA,GAAK,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAClD,AAAE,IAAI,UAAU,CAAC,WAAW,CAAC,GAAG,QAAQ,EAAE;MACxC,AAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;MAC1C,AAAE,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;MAC9C,AAAE,KAAK,GAAG,WAAW,CAAC;IACxB,AAAE,CAAC,MAAM;MACP,AAAE,MAAM;IACV,AAAE,CAAC;EACL,AAAE,CAAC;EACH,AAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;EAC5B,AAAE,UAAU,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;AACjC,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;AACH,wBAAE,qCAAY,GAAG;EACf,AAAEA,GAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;EAClD,AAAEA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EAClC,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;EACtC,AAAEC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;EAChB,AAAED,GAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;EAC5B,AAAEC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC;EAC3B,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACxB,AAAE,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxB,AAAE,QAAQ,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;IACvC,AAAE,IAAI,QAAQ,IAAI,IAAI,EAAE;MACtB,AAAE,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5D,AAAE,CAAC,MAAM;MACP,AAAE,UAAU,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;MAC/B,AAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,OAAO,CAAC;IAChC,AAAE,CAAC;EACL,AAAE,CAAC;EACH,AAAE,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;EAC1B,AAAE,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;EAC5B,AAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,AAAE,CAAC,CAEF;;;AAGD,eAAe,aAAa,CAAC;"}