{"version":3,"file":"GeometryCollection.js","sources":["../../../src/ol/geom/GeometryCollection.js"],"sourcesContent":["/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometries = [];\n      const geometries = this.geometries_;\n      let simplified = false;\n      for (let i = 0, ii = geometries.length; i < ii; ++i) {\n        const geometry = geometries[i];\n        const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        const simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n"],"names":["super","let","const"],"mappings":"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"}