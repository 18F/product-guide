{"version":3,"file":"SimpleGeometry.js","sources":["../../../src/ol/geom/SimpleGeometry.js"],"sourcesContent":["/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n"],"names":["super","const","let"],"mappings":"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"}