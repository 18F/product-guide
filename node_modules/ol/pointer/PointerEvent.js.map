{"version":3,"file":"PointerEvent.js","sources":["../../../src/ol/pointer/PointerEvent.js"],"sourcesContent":["/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\nclass PointerEvent extends _Event {\n\n  /**\n   * A class for pointer events.\n   *\n   * This class is used as an abstraction for mouse events,\n   * touch events and even native pointer events.\n   *\n   * @param {string} type The type of the event to create.\n   * @param {Event} originalEvent The event.\n   * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n   *    initial event properties.\n   */\n  constructor(type, originalEvent, opt_eventDict) {\n    super(type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    const eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n"],"names":["let","super","const"],"mappings":"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"}