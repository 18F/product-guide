{"version":3,"file":"tilelayershader.js","sources":["../../../../src/ol/renderer/webgl/tilelayershader.js"],"sourcesContent":["/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n"],"names":["const"],"mappings":"AAAA;;;;;;AAMA,QAAQ,KAAK,IAAI,WAAW,OAAO,gBAAgB,CAAC;AACpD,OAAO,aAAa,MAAM,yBAAyB,CAAC;AACpD,OAAO,WAAW,MAAM,uBAAuB,CAAC;;AAEhD,OAAOA,GAAK,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,WAAW;EACnD,oKAAoK;EACpK,0GAA0G,CAAC,CAAC;;AAE9G,OAAOA,GAAK,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,WAAW;EAC/C,2PAA2P;EAC3P,2HAA2H,CAAC,CAAC;"}