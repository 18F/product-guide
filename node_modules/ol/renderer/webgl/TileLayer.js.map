{"version":3,"file":"TileLayer.js","sources":["../../../../src/ol/renderer/webgl/TileLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileSource from '../../source/Tile.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {fragment, vertex} from './tilelayershader.js';\nimport Locations from './tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {import(\"./Map.js\").default} mapRenderer Map renderer.\n   * @param {import(\"../../layer/Tile.js\").default} tileLayer Tile layer.\n   */\n  constructor(mapRenderer, tileLayer) {\n\n    super(mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Fragment.js\").default}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Vertex.js\").default}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {import(\"./tilelayershader/Locations.js\").default}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    const mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          const loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleWebGLContextLost() {\n    super.handleWebGLContextLost();\n    this.locations_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const mapRenderer = this.mapRenderer;\n    const gl = context.getGL();\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    const tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    const tileSource = tileLayer.getSource();\n    if (!(tileSource instanceof TileSource)) {\n      return true;\n    }\n\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewState.resolution);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    const pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    const tilePixelResolution = tileResolution / pixelRatio;\n    const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    const center = viewState.center;\n    const extent = frameState.extent;\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    let framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      const tileRangeSize = tileRange.getSize();\n\n      const maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      const origin = tileGrid.getOrigin(z);\n      const minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      const minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n       */\n      const tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      const findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      let allTilesLoaded = true;\n      const tmpExtent = createEmpty();\n      const tmpTileRange = new TileRange(0, 0, 0, 0);\n      let childTileRange, drawable, fullyLoaded, tile, tileState;\n      let x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      const u_tileOffset = new Float32Array(4);\n      for (let i = 0, ii = zs.length; i < ii; ++i) {\n        const tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (const tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n\n          if (!(tile instanceof ImageTile)) {\n            continue;\n          }\n\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    const tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {import(\"../../Tile.js\").default} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    const pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    const pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    const pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    const gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLTileLayerRenderer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Tile.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n"],"names":["super","const","let"],"mappings":"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"}