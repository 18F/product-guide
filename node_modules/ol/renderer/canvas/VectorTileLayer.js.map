{"version":3,"file":"VectorTileLayer.js","sources":["../../../../src/ol/renderer/canvas/VectorTileLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n\n    super(layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    const renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tile = super.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    const tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n    const layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    const layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return super.prepareFrame(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  createReplayGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    const revision = layer.getRevision();\n    const renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    const replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    const source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const tileExtent = tile.extent;\n\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n      const tileProjection = sourceTile.getProjection();\n      let reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n      const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function(feature) {\n        let styles;\n        const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    }\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    const features = {};\n\n    const renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    let bufferedExtent, found;\n    let i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            const key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  getReplayTransform_(tile, frameState) {\n    const layer = this.getLayer();\n    const source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    const tileGrid = source.getTileGrid();\n    const tileCoord = tile.tileCoord;\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n    const renderResolution = viewState.resolution / pixelRatio;\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const center = viewState.center;\n    const origin = getTopLeft(tileExtent);\n    const size = frameState.size;\n    const offsetX = Math.round(pixelRatio * size[0] / 2);\n    const offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  }\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  handleFontsChanged_(event) {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  postCompose(context, frameState, layerState) {\n    const layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    const renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      const declutterReplays = layer.getDeclutter() ? {} : null;\n      const source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      const replayTypes = VECTOR_REPLAYS[renderMode];\n      const pixelRatio = frameState.pixelRatio;\n      const rotation = frameState.viewState.rotation;\n      const size = frameState.size;\n      let offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      const viewHints = frameState.viewHints;\n      const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      const tiles = this.renderedTiles;\n      const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      const clips = [];\n      const zs = [];\n      for (let i = tiles.length - 1; i >= 0; --i) {\n        const tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n        const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        let transform = undefined;\n        for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          const sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          const replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          const currentZ = sourceTile.tileCoord[0];\n          const currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (let j = 0, jj = clips.length; j < jj; ++j) {\n            const clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    super.postCompose(context, frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  renderTileImage_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      const tileCoord = tile.wrappedTileCoord;\n      const z = tileCoord[0];\n      const source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      const tileGrid = source.getTileGridForProjection(projection);\n      const resolution = tileGrid.getResolution(z);\n      const context = tile.getContext(layer);\n      const size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        const sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const pixelScale = pixelRatio / resolution;\n        const transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        const replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n"],"names":["const","super","t","tt","let","this"],"mappings":"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"}