{"version":3,"file":"UrlTile.js","sources":["../../../src/ol/source/UrlTile.js"],"sourcesContent":["/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UrlTile;\n"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,YAAY,CAAC;AAClC,OAAO,SAAS,MAAM,iBAAiB,CAAC;AACxC,QAAQ,SAAS,EAAE,mBAAmB,EAAE,mBAAmB,OAAO,uBAAuB,CAAC;AAC1F,OAAO,UAAU,GAAG,eAAe,OAAO,WAAW,CAAC;AACtD,OAAO,aAAa,MAAM,oBAAoB,CAAC;AAC/C,QAAQ,SAAS,OAAO,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B1C,IAAM,OAAO,GAAmB;EAI9B,gBAAW,CAAC,OAAO,EAAE;;IAEnBA,eAAK,OAAC;MACJ,YAAY,EAAE,OAAO,CAAC,YAAY;MAClC,SAAS,EAAE,OAAO,CAAC,SAAS;MAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;MACtB,UAAU,EAAE,OAAO,CAAC,UAAU;MAC9B,KAAK,EAAE,OAAO,CAAC,KAAK;MACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;MAC1B,cAAc,EAAE,OAAO,CAAC,cAAc;MACtC,KAAK,EAAE,OAAO,CAAC,KAAK;MACpB,UAAU,EAAE,OAAO,CAAC,UAAU;MAC9B,GAAG,EAAE,OAAO,CAAC,GAAG;MAChB,uBAAuB,EAAE,OAAO,CAAC,uBAAuB;KACzD,CAAC,CAAC;;;;;;IAMH,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC;;;;;;IAMzD,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;;;;IAMjD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC;;;;;;IAM1G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IAEjB,IAAI,OAAO,CAAC,IAAI,EAAE;MAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC5B,MAAM,IAAI,OAAO,CAAC,GAAG,EAAE;MACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KAC1B;;IAED,IAAI,OAAO,CAAC,eAAe,EAAE;MAC3B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7D;;;;;;IAMD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;;;;;;0CAE5B;;;;;;;oBAOD,mDAAmB,GAAG;IACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC9B;;;;;;;oBAOD,iDAAkB,GAAG;IACnB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B;;;;;;;;;oBASD,2BAAO,GAAG;IACR,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB;;;;;;;oBAOD,6CAAgB,CAAC,KAAK,EAAE;IACtBC,GAAK,CAAC,IAAI,+CAA+C,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxEA,GAAK,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACzBA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClCC,GAAG,CAAC,IAAI,CAAC;IACT,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,EAAE;MAClC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;MAClC,IAAI,GAAG,aAAa,CAAC,aAAa,CAAC;KACpC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,gBAAgB,EAAE;MACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;MAClC,IAAI,GAAG,SAAS,IAAI,SAAS,CAAC,KAAK,GAAG,aAAa,CAAC,aAAa;QAC/D,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC;UAC7D,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;KAC3C;IACD,IAAI,IAAI,IAAI,SAAS,EAAE;MACrB,IAAI,CAAC,aAAa,CAAC,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;KACrD;IACF;;;;;;;oBAOD,mDAAmB,CAAC,gBAAgB,EAAE;IACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACvB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IACzC,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;;oBAQD,iDAAkB,CAAC,eAAe,EAAE,GAAG,EAAE;IACvC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACvC,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;IACpC,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;MAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAClB,MAAM;MACL,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IACF;;;;;;;oBAOD,yBAAM,CAAC,GAAG,EAAE;IACVD,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpB;;;;;;;oBAOD,2BAAO,CAAC,IAAI,EAAE;IACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjBA,GAAK,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC,wBAAwB,EAAE;MACjC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;KACxE,MAAM;MACL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAClB;IACF;;;;;oBAKD,2BAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACfA,GAAK,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;MAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KAClC;GACF;;;EA/KmB,aAgLrB;;;AAGD,eAAe,OAAO,CAAC;"}