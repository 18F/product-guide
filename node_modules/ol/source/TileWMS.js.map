{"version":3,"file":"TileWMS.js","sources":["../../../src/ol/source/TileWMS.js"],"sourcesContent":["/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options=} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || /** @type {Options} */ ({});\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n"],"names":["const","super","let"],"mappings":"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"}