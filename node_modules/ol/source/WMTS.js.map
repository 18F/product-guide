{"version":3,"file":"WMTS.js","sources":["../../../src/ol/source/WMTS.js"],"sourcesContent":["/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  const requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  const dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n"],"names":["const","let","super"],"mappings":"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"}