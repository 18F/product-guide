{"version":3,"file":"Zoomify.js","sources":["../../../src/ol/source/Zoomify.js"],"sourcesContent":["/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport class CustomTile extends ImageTile {\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    const size = options.size;\n    const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const extent = options.extent || [0, -size[1], size[0], 0];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        let width = imageWidth;\n        let height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [1];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    let url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = -tileCoord[2] - 1;\n            const tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileSize = tileGrid.getTileSize(tileCoordZ);\n            const tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n}\n\nexport default Zoomify;\n"],"names":["const","super","let"],"mappings":"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"}