{"version":3,"file":"TileDebug.js","sources":["../../../src/ol/source/TileDebug.js"],"sourcesContent":["/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nclass LabeledTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {string} text Text.\n   */\n  constructor(tileCoord, tileSize, text) {\n\n    super(tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  getImage() {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      const tileSize = this.tileSize_;\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  }\n\n  /**\n  * @override\n  */\n  load() {}\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nclass TileDebug extends TileSource {\n  /**\n   * @param {Options} options Debug tile options.\n   */\n  constructor(options) {\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  /**\n  * @inheritDoc\n  */\n  getTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      const tileSize = toSize(this.tileGrid.getTileSize(z));\n      const tileCoord = [z, x, y];\n      const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      const text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      const tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n}\n\n\nexport default TileDebug;\n"],"names":["super","const"],"mappings":"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"}