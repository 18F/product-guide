{"version":3,"file":"UTFGrid.js","sources":["../../../src/ol/source/UTFGrid.js"],"sourcesContent":["/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport class CustomTile extends Tile {\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    const yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  forDataAtCoordinate(coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  }\n\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n\n  /**\n   * @override\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      const tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UTFGrid;\n"],"names":["super","const","let"],"mappings":"AAAA;;;;AAIA,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,SAAS,MAAM,iBAAiB,CAAC;AACxC,QAAQ,mBAAmB,EAAE,mBAAmB,OAAO,uBAAuB,CAAC;AAC/E,QAAQ,MAAM,OAAO,eAAe,CAAC;AACrC,QAAQ,UAAU,OAAO,cAAc,CAAC;AACxC,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,QAAQ,cAAc,EAAE,UAAU,OAAO,cAAc,CAAC;AACxD,QAAQ,KAAK,IAAI,YAAY,OAAO,WAAW,CAAC;AAChD,QAAQ,GAAG,IAAI,aAAa,EAAE,2BAA2B,OAAO,YAAY,CAAC;AAC7E,OAAO,WAAW,MAAM,YAAY,CAAC;AACrC,OAAO,UAAU,MAAM,WAAW,CAAC;AACnC,QAAQ,SAAS,OAAO,iBAAiB,CAAC;AAC1C,QAAQ,SAAS,EAAE,oBAAoB,OAAO,gBAAgB,CAAC;;;;;;;;;;AAU/D,OAAO,IAAM,UAAU,GAAa;EAUlC,mBAAW,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE;;IAE5DA,SAAK,OAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;;;;;IAMxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;;;;;;IAMhB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;;IAMtB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;;;;;;IAM9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;IAMlB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;IAMlB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;;IAOlB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;;gDAErB;;;;;;uBAMD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC;IACb;;;;;;;;uBAQD,2BAAO,CAAC,UAAU,EAAE;IAClB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;MAC9B,OAAO,IAAI,CAAC;KACb;IACDC,GAAK,CAAC,SAAS,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACxCA,GAAK,CAAC,SAAS,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExCA,GAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;IAExE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;MAC3B,OAAO,IAAI,CAAC;KACb;;IAEDC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9D,IAAI,IAAI,IAAI,EAAE,EAAE;MACd,IAAI,EAAE,CAAC;KACR;IACD,IAAI,IAAI,IAAI,EAAE,EAAE;MACd,IAAI,EAAE,CAAC;KACR;IACD,IAAI,IAAI,EAAE,CAAC;;IAEXA,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;MACtBD,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MAC5B,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;QAClC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;OACvB,MAAM;QACL,IAAI,GAAG,EAAE,CAAC;OACX;KACF;IACD,OAAO,IAAI,CAAC;IACb;;;;;;;;;;;;;uBAaD,mDAAmB,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC/D,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,IAAI,WAAW,KAAK,IAAI,EAAE;MACxD,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;QAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;OACnD,EAAE,IAAI,CAAC,CAAC;MACT,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB,MAAM;MACL,IAAI,WAAW,KAAK,IAAI,EAAE;QACxB,UAAU,CAAC,WAAW;UACpB,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACnD,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;OAClB,MAAM;QACL,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;OACnD;KACF;IACF;;;;;;uBAMD,yBAAM,GAAG;IACP,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB;;;;;;uBAMD,qCAAY,GAAG;IACb,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;uBAOD,mCAAW,CAAC,IAAI,EAAE;IAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;;IAE1B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;uBAMD,uCAAa,GAAG;IACd,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,EAAE;MAChC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;MAC/B,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;UACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OACjC,MAAM;QACLA,GAAK,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;QACpC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,EAAE,CAAC;OACf;KACF;IACF;;;;;;;uBAOD,iCAAU,CAAC,KAAK,EAAE;IAChBA,GAAK,CAAC,MAAM,iCAAiC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;IAE5D,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;MACjEC,GAAG,CAAC,QAAQ,CAAC;MACb,IAAI;QACF,QAAQ,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;OACzE,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO;OACR;MACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5B,MAAM;MACL,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IACF;;;;;;;uBAOD,mCAAW,CAAC,KAAK,EAAE;IACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB;;;;;;uBAMD,qBAAI,GAAG;IACL,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;GACF;;;EAnO6B,OAoO/B;;;;;;;;;;;;;;;;;;;;;;;;;AAyBD,IAAM,OAAO,GAAmB;EAI9B,gBAAW,CAAC,OAAO,EAAE;IACnBF,eAAK,OAAC;MACJ,UAAU,EAAE,aAAa,CAAC,WAAW,CAAC;MACtC,KAAK,EAAE,WAAW,CAAC,OAAO;KAC3B,CAAC,CAAC;;;;;;IAMH,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,KAAK,SAAS;MACjD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;;;;IAM5B,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC;;;;;;IAM5C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;;;;;IAM3B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC;;IAErC,IAAI,OAAO,CAAC,GAAG,EAAE;MACf,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;UAC9D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OACxC,MAAM;QACLC,GAAK,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;QACpC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,EAAE,CAAC;OACf;KACF,MAAM,IAAI,OAAO,CAAC,QAAQ,EAAE;MAC3B,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC/C,MAAM;MACL,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KACnB;;;;;;0CAEF;;;;;;;oBAOD,iCAAU,CAAC,KAAK,EAAE;IAChBA,GAAK,CAAC,MAAM,iCAAiC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;IAE5D,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;MACjEC,GAAG,CAAC,QAAQ,CAAC;MACb,IAAI;QACF,QAAQ,gDAAgD,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;OAC3F,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,OAAO;OACR;MACD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;KACvC,MAAM;MACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IACF;;;;;;;oBAOD,mCAAW,CAAC,KAAK,EAAE;IACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC5B;;;;;;;;oBAQD,mCAAW,GAAG;IACZ,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB;;;;;;;;;;;;;;oBAcD,6EAAgC;IAC9B,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjBD,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,iCAAiC;QAC/D,UAAU,EAAE,UAAU,CAAC,CAAC;MAC1BA,GAAK,CAAC,IAAI,6BAA6B,CAAC,IAAI,CAAC,OAAO;QAClD,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;MACtE,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACnE,MAAM;MACL,IAAI,WAAW,KAAK,IAAI,EAAE;QACxB,UAAU,CAAC,WAAW;UACpB,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChB,EAAE,CAAC,CAAC,CAAC;OACP,MAAM;QACL,QAAQ,CAAC,IAAI,CAAC,CAAC;OAChB;KACF;IACF;;;;;;oBAMD,mDAAmB,GAAG;IACpB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAClC;;;;;;;;oBAQD,yDAAsB,CAAC,QAAQ,EAAE;;IAE/BA,GAAK,CAAC,kBAAkB,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;;IAEtDA,GAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IAC9CC,GAAG,CAAC,MAAM,CAAC;IACX,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;MACpCD,GAAK,CAAC,SAAS,GAAG,2BAA2B;QAC3C,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;MACxC,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC;KACxD;;IAEDA,GAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzCA,GAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1CA,GAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;MACzB,MAAM,EAAE,oBAAoB,CAAC,gBAAgB,CAAC;MAC9C,OAAO,EAAE,OAAO;MAChB,OAAO,EAAE,OAAO;KACjB,CAAC,CAAC;IACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAEzB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;;IAEtCA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE;MACV,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;MACjC,OAAO;KACR;;IAED,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;IAE7D,IAAI,QAAQ,CAAC,aAAa,CAAC,KAAK,SAAS,EAAE;MACzCA,GAAK,CAAC,iBAAiB,GAAG,MAAM,KAAK,SAAS;QAC5C,MAAM,GAAG,kBAAkB,CAAC,SAAS,EAAE,CAAC;;MAE1C,IAAI,CAAC,eAAe,CAAC,SAAS,UAAU,EAAE;QACxC,IAAI,UAAU,CAAC,iBAAiB,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE;UACpD,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;SAClC;QACD,OAAO,IAAI,CAAC;OACb,CAAC,CAAC;KACJ;;IAED,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;IAElC;;;;;;oBAMD,2BAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE;IACvCA,GAAK,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;MAC5C,OAAO;qDACwC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;OAChF,CAAC;KACH,MAAM;MACLA,GAAK,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5BA,GAAK,CAAC,YAAY;UACd,IAAI,CAAC,8BAA8B,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;MAC/DA,GAAK,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;MAC5EA,GAAK,CAAC,IAAI,GAAG,IAAI,UAAU;QACzB,SAAS;QACT,OAAO,KAAK,SAAS,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK;QACxD,OAAO,KAAK,SAAS,GAAG,OAAO,GAAG,EAAE;QACpC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,MAAM,CAAC,CAAC;MACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;MACvC,OAAO,IAAI,CAAC;KACb;IACF;;;;;;oBAMD,2BAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACfA,GAAK,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;MAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KAClC;GACF;;;EA/NmB,aAgOrB;;;AAGD,eAAe,OAAO,CAAC;"}