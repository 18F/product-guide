{"version":3,"file":"Source.js","sources":["../../../src/ol/source/Source.js"],"sourcesContent":["/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n"],"names":["super"],"mappings":"AAAA;;;AAGA,QAAQ,QAAQ,OAAO,YAAY,CAAC;AACpC,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,QAAQ,GAAG,IAAI,aAAa,OAAO,YAAY,CAAC;AAChD,OAAO,WAAW,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CrC,IAAM,MAAM,GAAmB;EAI7B,eAAW,CAAC,OAAO,EAAE;;IAEnBA,eAAK,KAAC,CAAC,CAAC;;;;;;IAMR,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;IAMrD,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;;;;;IAM7D,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,uBAAuB,KAAK,SAAS;MAC3E,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC;;;;;;;IAOzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;IAMrB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS;MACvC,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;;;;;;IAMpC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;;wCAEnE;;;;;;mBAMD,2CAAe,GAAG;IAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B;;;;;mBAKD,iEAA0B,GAAG;IAC3B,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACtC;;;;;;;mBAOD,uCAAa,GAAG;IACd,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB;;;;;;mBAMD,yCAAc,GAAG;IACf,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;mBAOD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB;;;;;mBAKD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB;;;;;;mBAMD,2BAAO,GAAG;IACR,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;;;mBASD,2CAAe,CAAC,YAAY,EAAE;IAC5B,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;IACrD,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;mBAOD,6BAAQ,CAAC,KAAK,EAAE;IACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACpB,IAAI,CAAC,OAAO,EAAE,CAAC;GAChB;;;EA7HkB,aA8HpB;;;;;;;;AAQD,SAAS,iBAAiB,CAAC,eAAe,EAAE;EAC1C,IAAI,CAAC,eAAe,EAAE;IACpB,OAAO,IAAI,CAAC;GACb;EACD,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;IAClC,OAAO,SAAS,UAAU,EAAE;MAC1B,OAAO,eAAe,CAAC;KACxB,CAAC;GACH;;EAED,IAAI,OAAO,eAAe,KAAK,UAAU,EAAE;IACzC,OAAO,eAAe,CAAC;GACxB;;EAED,OAAO,SAAS,UAAU,EAAE;IAC1B,OAAO,CAAC,eAAe,CAAC,CAAC;GAC1B,CAAC;CACH;;;AAGD,eAAe,MAAM,CAAC;"}