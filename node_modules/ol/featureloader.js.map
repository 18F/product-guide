{"version":3,"file":"featureloader.js","sources":["../../src/ol/featureloader.js"],"sourcesContent":["/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      const sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n"],"names":["const","let"],"mappings":"AAAA;;;AAGA,QAAQ,IAAI,OAAO,gBAAgB,CAAC;AACpC,OAAO,UAAU,MAAM,wBAAwB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4ChD,OAAO,SAAS,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;EAC7D,OAAO;;;;;;;IAOL,SAAS,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;MACvCA,GAAK,CAAC,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;MACjC,GAAG,CAAC,IAAI,CAAC,KAAK;QACZ,OAAO,GAAG,KAAK,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,GAAG;QACrE,IAAI,CAAC,CAAC;MACR,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,UAAU,CAAC,YAAY,EAAE;QAC/C,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC;OAClC;;;;;MAKD,GAAG,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE;;QAE3B,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;UACxDA,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;;UAE9BC,GAAG,CAAC,MAAM,CAAC;UACX,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE;YACtD,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;WAC3B,MAAM,IAAI,IAAI,IAAI,UAAU,CAAC,GAAG,EAAE;YACjC,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;YACzB,IAAI,CAAC,MAAM,EAAE;cACX,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;aAC/E;WACF,MAAM,IAAI,IAAI,IAAI,UAAU,CAAC,YAAY,EAAE;YAC1C,MAAM,8BAA8B,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;WACpD;UACD,IAAI,MAAM,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,MAAM;cAC3C,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;YAClC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;WACxD,MAAM;YACL,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WACpB;SACF,MAAM;UACL,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;OACF,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;MAIb,GAAG,CAAC,OAAO,GAAG,WAAW;QACvB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACpB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACb,GAAG,CAAC,IAAI,EAAE,CAAC;KACZ;GACF,CAAC;CACH;;;;;;;;;;;;AAYD,OAAO,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE;EAC/B,OAAO,eAAe,CAAC,GAAG,EAAE,MAAM;;;;;;;IAOhC,SAAS,QAAQ,EAAE,cAAc,EAAE;MACjCD,GAAK,CAAC,YAAY,oBAAoB,CAAC,IAAI,CAAC,CAAC;MAC7C,IAAI,OAAO,YAAY,CAAC,WAAW,KAAK,UAAU,EAAE;yDACD,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;OACvF;KACF,2BAA2B,IAAI,CAAC,CAAC;CACrC;"}