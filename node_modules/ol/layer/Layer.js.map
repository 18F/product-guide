{"version":3,"file":"Layer.js","sources":["../../../src/ol/layer/Layer.js"],"sourcesContent":["/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    const source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    const source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        const layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n"],"names":["const","super"],"mappings":"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"}