{"version":3,"file":"Vector.js","sources":["../../../src/ol/layer/Vector.js"],"sourcesContent":["/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass VectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter;\n  }\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  getRenderOrder() {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n"],"names":["const","super"],"mappings":"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"}