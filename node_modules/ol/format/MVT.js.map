{"version":3,"file":"MVT.js","sources":["../../../src/ol/format/MVT.js"],"sourcesContent":["/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  createFeature_(pbf, rawFeature, opt_options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const id = rawFeature.id;\n    const values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geom, false,\n        this.adaptOptions(opt_options)));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getLastExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature));\n      }\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n}\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n"],"names":["super","const","let"],"mappings":"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"}