{"version":3,"file":"XML.js","sources":["../../../src/ol/format/XML.js"],"sourcesContent":["/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {}\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n"],"names":["const"],"mappings":"AAAA;;;AAGA,QAAQ,UAAU,EAAE,KAAK,OAAO,WAAW,CAAC;;;;;;;;AAQ5C,IAAM,GAAG;;cAQP,qBAAI,CAAC,MAAM,EAAE;EACb,AAAE,IAAI,CAAC,MAAM,EAAE;IACb,AAAE,OAAO,IAAI,CAAC;EAChB,AAAE,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IACvC,AAAEA,GAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5B,AAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;EACtC,AAAE,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;IAC/B,AAAE,OAAO,IAAI,CAAC,gBAAgB,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;EACnE,AAAE,CAAC,MAAM;IACP,AAAE,OAAO,IAAI,CAAC,YAAY,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC;EAC9D,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,cAAE,6CAAgB,CAAC,GAAG,EAAE,GAAE;;AAE1B,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,cAAE,qCAAY,CAAC,IAAI,EAAE,EAAE,CACtB;;AAED,eAAe,GAAG,CAAC;"}