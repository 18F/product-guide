{"version":3,"file":"xsd.js","sources":["../../../src/ol/format/xsd.js"],"sourcesContent":["/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n"],"names":["const"],"mappings":"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"}