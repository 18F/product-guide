{"version":3,"file":"GML2.js","sources":["../../../src/ol/format/GML2.js"],"sourcesContent":["/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n\n  /**\n   * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  innerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  outerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n"],"names":["const","super","let"],"mappings":"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"}