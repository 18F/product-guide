{"version":3,"file":"TextFeature.js","sources":["../../../src/ol/format/TextFeature.js"],"sourcesContent":["/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n"],"names":["super"],"mappings":"AAAA;;;AAGA,QAAQ,QAAQ,OAAO,YAAY,CAAC;AACpC,OAAO,aAAa,MAAM,sBAAsB,CAAC;AACjD,OAAO,UAAU,MAAM,yBAAyB,CAAC;;;;;;;;;;AAUjD,IAAM,WAAW,GAAsB;EACrC,oBAAW,GAAG;IACZA,kBAAK,KAAC,CAAC,CAAC;;;;;kDACT;;;;;wBAKD,2BAAO,GAAG;IACR,OAAO,UAAU,CAAC,IAAI,CAAC;IACxB;;;;;;;;;;wBAUD,mCAAW,CAAC,MAAM,EAAE,WAAW,EAAE;IAC/B,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IAClF;;;;;;;;;wBASD,mDAAmB,CAAC,IAAI,EAAE,WAAW,EAAE;IACrC,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;;;;wBAUD,qCAAY,CAAC,MAAM,EAAE,WAAW,EAAE;IAChC,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACnF;;;;;;;;;wBASD,qDAAoB,CAAC,IAAI,EAAE,WAAW,EAAE;IACtC,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;;;;wBAUD,qCAAY,CAAC,MAAM,EAAE,WAAW,EAAE;IAChC,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACnF;;;;;;;;;wBASD,qDAAoB,CAAC,IAAI,EAAE,WAAW,EAAE;IACtC,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;;;wBASD,yCAAc,CAAC,MAAM,EAAE;IACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD;;;;;;;wBAOD,yDAAsB,CAAC,IAAI,EAAE;IAC3B,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B;;;;;;;;;;wBAUD,qCAAY,CAAC,OAAO,EAAE,WAAW,EAAE;IACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACvE;;;;;;;;;wBASD,6CAAgB,CAAC,OAAO,EAAE,WAAW,EAAE;IACrC,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;;;;wBAUD,uCAAa,CAAC,QAAQ,EAAE,WAAW,EAAE;IACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE;;;;;;;;;wBASD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE;IACvC,OAAO,QAAQ,EAAE,CAAC;IACnB;;;;;;;;;;wBAUD,uCAAa,CAAC,QAAQ,EAAE,WAAW,EAAE;IACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE;;;;;;;;;wBASD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE;IACvC,OAAO,QAAQ,EAAE,CAAC;GACnB;;;EAxKuB,gBAyKzB;;;;;;;AAOD,SAAS,OAAO,CAAC,MAAM,EAAE;EACvB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAO,MAAM,CAAC;GACf,MAAM;IACL,OAAO,EAAE,CAAC;GACX;CACF;;;AAGD,eAAe,WAAW,CAAC;"}