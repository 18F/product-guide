{"version":3,"file":"WMSGetFeatureInfo.js","sources":["../../../src/ol/format/WMSGetFeatureInfo.js"],"sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        const featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [], parsersNS, layerElement, objectStack, this.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  }\n\n}\n\n\nexport default WMSGetFeatureInfo;\n"],"names":["const","super","let"],"mappings":"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"}