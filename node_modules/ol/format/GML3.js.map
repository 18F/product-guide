{"version":3,"file":"GML3.js","sources":["../../../src/ol/format/GML3.js"],"sourcesContent":["/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n\n  /**\n   * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve_(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface_(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  curveMemberParser_(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  surfaceMemberParser_(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  interiorParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  exteriorParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface_(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos_(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace,\n      nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeGeometryNode(geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Element} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n"],"names":["const","super","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,aAAa,CAAC;AACnC,QAAQ,cAAc,OAAO,cAAc,CAAC;AAC5C,QAAQ,oBAAoB,OAAO,cAAc,CAAC;AAClD,OAAO,OAAO,GAAG,KAAK,OAAO,cAAc,CAAC;AAC5C,QAAQ,4BAA4B,EAAE,mBAAmB,OAAO,UAAU,CAAC;AAC3E,OAAO,cAAc,MAAM,2BAA2B,CAAC;AACvD,OAAO,UAAU,MAAM,uBAAuB,CAAC;AAC/C,OAAO,eAAe,MAAM,4BAA4B,CAAC;AACzD,OAAO,YAAY,MAAM,yBAAyB,CAAC;AACnD,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,QAAQ,MAAM,OAAO,WAAW,CAAC;AACjC,QAAQ,GAAG,IAAI,aAAa,EAAE,eAAe,OAAO,YAAY,CAAC;AACjE,QAAQ,eAAe,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB;EAC5E,YAAY,EAAE,qBAAqB,EAAE,4BAA4B,EAAE,SAAS;EAC5E,eAAe,EAAE,mBAAmB,EAAE,uBAAuB,OAAO,WAAW,CAAC;;;;;;;;AAQlFA,GAAK,CAAC,cAAc,GAAG,KAAK;IACxB,8DAA8D;IAC9D,iBAAiB,CAAC;;;;;;;AAOtBA,GAAK,CAAC,gCAAgC,GAAG;EACvC,iBAAiB,EAAE,kBAAkB;EACrC,YAAY,EAAE,aAAa;EAC3B,cAAc,EAAE,eAAe;EAC/B,cAAc,EAAE,eAAe;CAChC,CAAC;;;;;;;;;;;AAWF,IAAM,IAAI,GAAgB;EAKxB,aAAW,CAAC,WAAW,EAAE;IACvBA,GAAK,CAAC,OAAO;QACT,CAAC,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;;IAErCC,YAAK,OAAC,OAAO,CAAC,CAAC;;;;;;IAMf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,KAAK,SAAS,GAAG,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;IAMxE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;;IAMlE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,KAAK,SAAS;MACjD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;;;;IAM5B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,KAAK,SAAS;MACrD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;;;;;IAK9B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc;MAC1C,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;;;;;;IAM1C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS;MACpC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;;;;;;oCAExB;;;;;;;;iBAQD,2CAAe,CAAC,IAAI,EAAE,WAAW,EAAE;;IAEjCD,GAAK,CAAC,WAAW,GAAG,eAAe,CAAC,EAAE;MACpC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACrD,IAAI,WAAW,EAAE;MACfA,GAAK,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;MACzD,OAAO,eAAe,CAAC;KACxB,MAAM;MACL,OAAO,SAAS,CAAC;KAClB;IACF;;;;;;;;iBAQD,+CAAiB,CAAC,IAAI,EAAE,WAAW,EAAE;;IAEnCA,GAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,EAAE;MACjC,IAAI,CAAC,qBAAqB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACvD,IAAI,QAAQ,EAAE;MACZ,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;KACnC;IACF;;;;;;;iBAOD,iDAAkB,CAAC,IAAI,EAAE,WAAW,EAAE;IACpC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC/D;;;;;;;iBAOD,qDAAoB,CAAC,IAAI,EAAE,WAAW,EAAE;IACtC,SAAS,CAAC,IAAI,CAAC,sBAAsB;MACnC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC5B;;;;;;;;iBAQD,iCAAU,CAAC,IAAI,EAAE,WAAW,EAAE;IAC5B,OAAO,eAAe,CAAC,CAAC,IAAI,CAAC;MAC3B,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACnD;;;;;;;;iBAQD,qCAAY,CAAC,IAAI,EAAE,WAAW,EAAE;IAC9B,OAAO,eAAe,CAAC,CAAC,IAAI,CAAC;MAC3B,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACpD;;;;;;;;iBAQD,+CAAiB,CAAC,IAAI,EAAE,WAAW,EAAE;IACnC,OAAO,eAAe,CAAC,CAAC,IAAI,CAAC;MAC3B,IAAI,CAAC,yBAAyB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC5D;;;;;;;;iBAQD,yDAAsB,CAAC,IAAI,EAAE,WAAW,EAAE;IACxC,OAAO,eAAe,CAAC,CAAC,IAAI,CAAC;MAC3B,IAAI,CAAC,iCAAiC;MACtC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC5B;;;;;;;iBAOD,2CAAe,CAAC,IAAI,EAAE,WAAW,EAAE;;IAEjCA,GAAK,CAAC,cAAc,GAAG,eAAe,CAAC,SAAS;MAC9C,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC9C,IAAI,cAAc,EAAE;MAClBA,GAAK,CAAC,eAAe;UACjB,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1C,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACtC;IACF;;;;;;;iBAOD,2CAAe,CAAC,IAAI,EAAE,WAAW,EAAE;;IAEjCA,GAAK,CAAC,cAAc,GAAG,eAAe,CAAC,SAAS;MAC9C,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC9C,IAAI,cAAc,EAAE;MAClBA,GAAK,CAAC,eAAe;UACjB,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1C,eAAe,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;KACrC;IACF;;;;;;;;iBAQD,qCAAY,CAAC,IAAI,EAAE,WAAW,EAAE;;IAE9BA,GAAK,CAAC,eAAe,GAAG,eAAe,CAAC,CAAC,IAAI,CAAC;MAC5C,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAClD,IAAI,eAAe,IAAI,eAAe,CAAC,CAAC,CAAC,EAAE;MACzCA,GAAK,CAAC,eAAe,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;MAC3CA,GAAK,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;MACtCE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;MACV,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QACpD,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;OACnC;MACD,OAAO,IAAI,OAAO,CAAC,eAAe,EAAE,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAC/D,MAAM;MACL,OAAO,SAAS,CAAC;KAClB;IACF;;;;;;;;iBAQD,iCAAU,CAAC,IAAI,EAAE,WAAW,EAAE;;IAE5BF,GAAK,CAAC,eAAe,GAAG,eAAe,CAAC,CAAC,IAAI,CAAC;MAC5C,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAChD,IAAI,eAAe,EAAE;MACnBA,GAAK,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,eAAe,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC;MACvE,OAAO,UAAU,CAAC;KACnB,MAAM;MACL,OAAO,SAAS,CAAC;KAClB;IACF;;;;;;;;iBAQD,uCAAa,CAAC,IAAI,EAAE,WAAW,EAAE;;IAE/BA,GAAK,CAAC,eAAe,GAAG,eAAe,CAAC,CAAC,IAAI,CAAC;MAC5C,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACnD,OAAO,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B;;;;;;;;iBAQD,qCAAY,CAAC,IAAI,EAAE,WAAW,EAAE;IAC9BE,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvCF,GAAK,CAAC,EAAE,GAAG,4CAA4C,CAAC;;IAExDA,GAAK,CAAC,eAAe,GAAG,EAAE,CAAC;IAC3BE,GAAG,CAAC,CAAC,CAAC;IACN,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACvB,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAC3B;IACD,IAAI,CAAC,KAAK,EAAE,EAAE;MACZ,OAAO,SAAS,CAAC;KAClB;IACDF,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/BA,GAAK,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACxCE,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;IAC5B,IAAI,YAAY,EAAE;MAChBF,GAAK,CAAC,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;MACzC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7C;IACD,IAAI,eAAe,KAAK,KAAK,EAAE;MAC7BE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;MACV,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;QACvDF,GAAK,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAC7BA,GAAK,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACvB,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;OAC5B;KACF;IACDA,GAAK,CAAC,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC;IACnC,IAAI,GAAG,IAAI,CAAC,EAAE;MACZ,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,IAAI,GAAG,KAAK,CAAC,EAAE;MACb,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,eAAe,CAAC;IACxB;;;;;;;;iBAQD,6CAAgB,CAAC,IAAI,EAAE,WAAW,EAAE;IAClCA,GAAK,CAAC,CAAC,GAAG,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IACnEA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/BA,GAAK,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACxCA,GAAK,CAAC,gBAAgB,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;IACjDE,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;IAC5B,IAAI,YAAY,EAAE;MAChBF,GAAK,CAAC,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;MACzC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7C;IACDA,GAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;IAE9BE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;MACrC,GAAG,GAAG,4BAA4B;QAChC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;KACtC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;MACzC,GAAG,GAAG,4BAA4B;QAChC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;KACnC,MAAM,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;MAChF,GAAG,GAAG,4BAA4B;+BACT,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;KAC1E,MAAM,IAAI,gBAAgB,EAAE;MAC3B,GAAG,GAAG,4BAA4B,CAAC,gBAAgB,CAAC,CAAC;KACtD;IACDA,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACZF,GAAK,CAAC,eAAe,GAAG,EAAE,CAAC;IAC3B,KAAKE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,EAAE;MACpD,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAChD,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QACzC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OAC/B,MAAM;QACL,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OAC/B;KACF;IACD,OAAO,eAAe,CAAC;IACxB;;;;;;;;iBAQD,+BAAS,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE;IAClCF,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7BA,GAAK,CAAC,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IACtC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAChDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnCE,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;IAC5B,IAAI,OAAO,EAAE;MACX,eAAe,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,kBAAkB,EAAE,CAAC;KAC/D;IACDF,GAAK,CAAC,KAAK,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;IACrCE,GAAG,CAAC,MAAM,CAAC;;IAEX,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;MACzC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC,MAAM;MACL,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC;IACD,IAAI,IAAI,EAAE;;MAERF,GAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MACxB,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC;KACnB;IACD,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACnC;;;;;;;;;iBASD,iCAAU,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE;IACvCE,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;IAC5B,IAAI,WAAW,EAAE;MACf,eAAe,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC,kBAAkB,EAAE,CAAC;KACnE;IACDA,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;MACnD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;MACzB,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,QAAQ,EAAE;;MAEZF,GAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MACxB,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC;KACnB;;IAED,OAAO,MAAM,CAAC;IACf;;;;;;;;iBAQD,uCAAa,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE;IACtCA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7BA,GAAK,CAAC,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IACtC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAChDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;IAEnCA,GAAK,CAAC,MAAM,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;IACtCA,GAAK,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1BA,GAAK,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7BE,GAAG,CAAC,KAAK,CAAC;IACV,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;MAC5B,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MAClB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;KAClD;IACD,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C;;;;;;;;iBAQD,mCAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IACvCF,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACtD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC5C;;;;;;;iBAOD,uCAAa,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE;IACvCA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,IAAI,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IAC5CA,GAAK,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,mBAAmB;MACjB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,qBAAqB;MAC1C,4BAA4B;MAC5B,MAAM;MACN,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5B;;;;;;;;iBAQD,6CAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC5CA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC9D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IACpD;;;;;;;;;iBASD,iDAAkB,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE;IACnDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IAChCA,GAAK,CAAC,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACnD,IAAI,eAAe,KAAK,SAAS,EAAE;MACjC,OAAO,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;KACnC;IACD,OAAO,eAAe,CAAC,UAAU,CAAC,YAAY;MAC5C,eAAe,KAAK,SAAS,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;IAC5D;;;;;;;;iBAQD,yDAAsB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IAClDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7BA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,IAAI,CAAC,QAAQ,KAAK,cAAc,IAAI,OAAO,EAAE;MAC/C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACD,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,cAAc,EAAE;MACnEA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;MACxC,mBAAmB;QACjB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;QAC1C,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,kBAAkB;QACvB,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KACxC,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;MACtCA,GAAK,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;MAC9D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAAC,oBAAoB;QACvB,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;KACnC;IACF;;;;;;;;iBAQD,2DAAuB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IACnDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,IAAI,CAAC,QAAQ,KAAK,mBAAmB,IAAI,OAAO,EAAE;MACpD,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACD,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY;QAC9B,IAAI,CAAC,QAAQ,KAAK,mBAAmB,EAAE;MACzCA,GAAK,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;MAC9D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;KACpD,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;MACpCA,GAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;MAChE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;MAC3B,IAAI,CAAC,mBAAmB,CAAC,QAAQ;QAC/B,QAAQ,EAAE,WAAW,CAAC,CAAC;KAC1B;IACF;;;;;;;;iBAQD,mEAA2B,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IACvDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7BA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnCA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;IACxC,mBAAmB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9E,IAAI,CAAC,mCAAmC;MACxC,IAAI,CAAC,kCAAkC,EAAE,QAAQ;MACjD,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACjC;;;;;;;;iBAQD,6CAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC5CA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnCA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7B,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;IACpC,mBAAmB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;MAC5D,IAAI,CAAC,wBAAwB;MAC7B,qBAAqB,CAAC,aAAa,CAAC,EAAE,MAAM;MAC5C,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACjC;;;;;;;;iBAQD,qEAA4B,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IACxDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7BA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnCA,GAAK,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/B,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvC;IACDA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACxC,mBAAmB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC;MAC1E,IAAI,CAAC,oCAAoC;MACzC,IAAI,CAAC,kCAAkC,EAAE,KAAK;MAC9C,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACjC;;;;;;;;iBAQD,iCAAU,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE;IAClCA,GAAK,CAAC,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACpE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACtD;;;;;;;;iBAQD,qEAA4B,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE;IACvDA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB;MACvC,OAAO,EAAE,WAAW,CAAC,CAAC;IACxB,IAAI,KAAK,EAAE;MACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;MACxB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;KAC1D;IACF;;;;;;;;iBAQD,+CAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE;IAC1CA,GAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAC7C;;;;;;;;iBAQD,uEAA6B,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE;IACrDA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAC7D,IAAI,KAAK,EAAE;MACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;MACxB,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACxD;IACF;;;;;;;;iBAQD,qDAAoB,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE;IAC/CA,GAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACjE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC1D;;;;;;;;iBAQD,mDAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE;IAC3CA,GAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY;MAC7C,mBAAmB,CAAC,CAAC;IACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACxD;;;;;;;iBAOD,qDAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IAChDA,GAAK,CAAC,OAAO,sDAAsD,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACzGA,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACjC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IACpBE,GAAG,CAAC,KAAK,CAAC;IACV,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;MAC3B,IAAI,OAAO,CAAC,cAAc,EAAE;QAC1B,KAAK,GAAG,eAAe;UACrB,QAAQ,EAAE,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;OAChE,MAAM;QACL,KAAK,GAAG,QAAQ,CAAC;OAClB;KACF,MAAM;MACL,KAAK,GAAG,oBAAoB,sDAAsD,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC9G;IACD,mBAAmB;MACjB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,qBAAqB;MAClC,IAAI,CAAC,sBAAsB,EAAE,CAAC,KAAK,CAAC;MACpC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACjC;;;;;;;iBAOD,mDAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE;IAC9CF,GAAK,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IAC5B,IAAI,GAAG,EAAE;MACP,IAAI,CAAC,YAAY,CAAC,KAAK,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;KACvD;IACDA,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5EA,GAAK,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;IACvCA,GAAK,CAAC,YAAY,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;IAC/C,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;MACxB,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;MACzB,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;KACrC;IACDA,GAAK,CAAC,UAAU,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;IAC3CA,GAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IAChBA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,KAAKA,GAAK,CAAC,GAAG,IAAI,UAAU,EAAE;MAC5BA,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;MAC9B,IAAI,KAAK,KAAK,IAAI,EAAE;QAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,GAAG,IAAI,YAAY,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC,qBAAqB,KAAK,UAAU,EAAE;UAC/F,IAAI,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE;YAC5C,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,iBAAiB;cACrD,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;WACpC;SACF,MAAM;UACL,IAAI,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE;YAC5C,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;WAC9E;SACF;OACF;KACF;IACDA,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,mBAAmB;MACjB,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,WAAW;MAC3B,qBAAqB,CAAC,SAAS,EAAE,SAAS,CAAC;MAC3C,MAAM;MACN,WAAW,EAAE,IAAI,CAAC,CAAC;IACtB;;;;;;;;iBAQD,qDAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE;IAChDA,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5EA,GAAK,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3CA,GAAK,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;IAEvCA,GAAK,CAAC,WAAW,GAAG,EAAE,CAAC;IACvB,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC5B,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,GAAG,iBAAiB;MACrD,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IAClCA,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,mBAAmB;MACjB,CAAC,IAAI,CAAC;MACN,WAAW;MACX,qBAAqB,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,QAAQ;MACvD,WAAW,CAAC,CAAC;IAChB;;;;;;;;;;iBAUD,iFAAkC,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE;IACnEA,GAAK,CAAC,UAAU,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,OAAO,eAAe,CAAC,IAAI,CAAC,SAAS;MACnC,gCAAgC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1D;;;;;;;;;;iBAUD,yDAAsB,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE;IACvDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpDA,GAAK,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;IAC7CA,GAAK,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnCA,GAAK,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/BA,GAAK,CAAC,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;IACzCE,GAAG,CAAC,QAAQ,CAAC;IACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;MACzB,QAAQ,wDAAwD,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;MAClF,IAAI,QAAQ,KAAK,cAAc,IAAI,YAAY,KAAK,IAAI,EAAE;QACxD,QAAQ,GAAG,cAAc,CAAC;OAC3B,MAAM,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;QACrD,QAAQ,GAAG,SAAS,CAAC;OACtB,MAAM,IAAI,QAAQ,KAAK,YAAY,IAAI,KAAK,KAAK,IAAI,EAAE;QACtD,QAAQ,GAAG,OAAO,CAAC;OACpB,MAAM,IAAI,QAAQ,KAAK,iBAAiB,IAAI,UAAU,KAAK,IAAI,EAAE;QAChE,QAAQ,GAAG,YAAY,CAAC;OACzB;KACF,MAAM;MACL,QAAQ,GAAG,UAAU,CAAC;KACvB;IACD,OAAO,eAAe,CAAC,IAAI,CAAC,SAAS;MACnC,QAAQ,CAAC,CAAC;IACb;;;;;;;;;;;iBAWD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE;IACvC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC7CF,GAAK,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACrDA,GAAK,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO;MACjE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;MAC1C,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClE,IAAI,WAAW,EAAE;MACf,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;KAC9B;IACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,OAAO,IAAI,CAAC;IACb;;;;;;;;;;;iBAWD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE;IACvC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC7CA,GAAK,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;IAC/D,IAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE,oBAAoB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACxFA,GAAK,CAAC,OAAO,GAAG;MACd,OAAO,EAAE,IAAI,CAAC,OAAO;MACrB,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,KAAK,EAAE,IAAI,CAAC,MAAM;MAClB,OAAO,EAAE,IAAI,CAAC,QAAQ;MACtB,YAAY,EAAE,IAAI,CAAC,aAAa;MAChC,UAAU,EAAE,IAAI,CAAC,WAAW;MAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;MACzB,WAAW,EAAE,IAAI,CAAC,WAAW;KAC9B,CAAC;IACF,IAAI,WAAW,EAAE;MACf,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;KAC9B;IACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,OAAO,IAAI,CAAC;GACb;;;EAn2BgB,UAo2BlB;;;;;;;AAOD,IAAI,CAAC,SAAS,CAAC,iCAAiC,GAAG;EACjD,4BAA4B,EAAE;IAC5B,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;IAChD,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;GACzD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,yBAAyB,GAAG;EACzC,4BAA4B,EAAE;IAC5B,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe;IAC1C,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe;GAC3C;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG;EAChC,4BAA4B,EAAE;IAC5B,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC;IAClD,YAAY,EAAE,YAAY;MACxB,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC,YAAY,EAAE,YAAY;MACxB,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC,iBAAiB,EAAE,YAAY;MAC7B,OAAO,CAAC,SAAS,CAAC,mBAAmB,CAAC;IACxC,YAAY,EAAE,YAAY;MACxB,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;IACtD,cAAc,EAAE,YAAY;MAC1B,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACrC,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;IACpD,cAAc,EAAE,YAAY;MAC1B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;IACnC,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IAChD,YAAY,EAAE,YAAY;MACxB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;IACjC,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;GACvD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG;EACnC,4BAA4B,EAAE;IAC5B,aAAa,EAAE,eAAe;MAC5B,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACpC,cAAc,EAAE,eAAe;MAC7B,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;GACrC;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,qBAAqB,GAAG;EACrC,4BAA4B,EAAE;IAC5B,eAAe,EAAE,eAAe;MAC9B,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC;IACtC,gBAAgB,EAAE,eAAe;MAC/B,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC;GACvC;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG;EACpC,4BAA4B,EAAE;IAC5B,YAAY,EAAE,eAAe;MAC3B,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;GACpD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,sBAAsB,GAAG;EACtC,4BAA4B,EAAE;IAC5B,SAAS,EAAE,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;IACzD,SAAS,EAAE,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;GACxD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG;EAChC,4BAA4B,EAAE;IAC5B,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;GACnD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG;EAC9B,4BAA4B,EAAE;IAC5B,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;GACtD;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG;EACjC,4BAA4B,EAAE;IAC5B,aAAa,EAAE,eAAe;MAC5B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAClC,aAAa,EAAE,eAAe;MAC5B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;GACnC;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG;EAChC,4BAA4B,EAAE;IAC5B,cAAc,EAAE,YAAY;MAC1B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;GACpC;CACF,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG;EACjC,4BAA4B,EAAE;IAC5B,mBAAmB,EAAE,YAAY;MAC/B,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;GACzC;CACF,CAAC;;;;;;;;;;;;AAYF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;;;;;;;AAO7B,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG;EACjC,4BAA4B,EAAE;IAC5B,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IACxD,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;GACzD;CACF,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,qBAAqB,GAAG;EACrC,4BAA4B,EAAE;IAC5B,aAAa,EAAE,iBAAiB,CAAC,mBAAmB,CAAC;IACrD,aAAa,EAAE,iBAAiB,CAAC,mBAAmB,CAAC;GACtD;CACF,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,mCAAmC,GAAG;EACnD,4BAA4B,EAAE;IAC5B,eAAe,EAAE,iBAAiB;MAChC,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;IAC9C,eAAe,EAAE,iBAAiB;MAChC,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;GAC/C;CACF,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,wBAAwB,GAAG;EACxC,4BAA4B,EAAE;IAC5B,aAAa,EAAE,iBAAiB;MAC9B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;GACpC;CACF,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,oCAAoC,GAAG;EACpD,4BAA4B,EAAE;IAC5B,kBAAkB,EAAE,iBAAiB;MACnC,IAAI,CAAC,SAAS,CAAC,6BAA6B,CAAC;IAC/C,aAAa,EAAE,iBAAiB;MAC9B,IAAI,CAAC,SAAS,CAAC,6BAA6B,CAAC;GAChD;CACF,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,qBAAqB,GAAG;EACrC,4BAA4B,EAAE;IAC5B,OAAO,EAAE,iBAAiB;MACxB,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;IACzC,YAAY,EAAE,iBAAiB;MAC7B,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;IAC9C,OAAO,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;IACtD,YAAY,EAAE,iBAAiB;MAC7B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAClC,YAAY,EAAE,iBAAiB;MAC7B,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC;IACzC,iBAAiB,EAAE,iBAAiB;MAClC,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;IAC9C,YAAY,EAAE,iBAAiB;MAC7B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAClC,SAAS,EAAE,iBAAiB;MAC1B,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;IACxC,cAAc,EAAE,iBAAiB;MAC/B,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC;IAC7C,SAAS,EAAE,iBAAiB;MAC1B,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;IACxC,cAAc,EAAE,iBAAiB;MAC/B,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC;IAC7C,UAAU,EAAE,iBAAiB;MAC3B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;GAChC;CACF,CAAC;;AAEF,eAAe,IAAI,CAAC;"}