{"version":3,"file":"EsriJSON.js","sources":["../../../src/ol/format/EsriJSON.js"],"sourcesContent":["/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const options = opt_options ? opt_options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const object = {};\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureSet} */ ({\n      'features': objects\n    });\n  }\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  const hasZM = getHasZM(lineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  const polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  const hasZM = getHasZM(multiLineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  const hasZM = getHasZM(multiPoint);\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  const coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n"],"names":["const","super","let"],"mappings":"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"}