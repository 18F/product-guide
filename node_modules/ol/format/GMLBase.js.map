{"version":3,"file":"GMLBase.js","sources":["../../../src/ol/format/GMLBase.js"],"sourcesContent":["/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nclass GMLBase extends XMLFeature {\n\n  /**\n   * @param {Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = /** @type {Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this.readFeatureElement, this) :\n                  makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (n.childNodes.length === 0\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry\n          value = this.readGeometryElement(n, objectStack);\n        }\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n\n      const len = n.attributes.length;\n      if (len > 0) {\n        values[localName] = {_content_: values[localName]};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          values[localName][attName] = n.attributes[i].value;\n        }\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      const feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      const fid = node.getAttribute('fid') ||\n           getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  }\n\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  pointMemberParser_(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  lineStringMemberParser_(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  polygonMemberParser_(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing_(node, objectStack) {\n    const ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode_(node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromNode(node, opt_options) {\n    const geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    const features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromNode(node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  }\n}\n\n\nGMLBase.prototype.namespace = GMLNS;\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n"],"names":["const","super","i","ii","let"],"mappings":"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"}