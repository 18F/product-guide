{"version":3,"file":"RegularShape.js","sources":["../../../src/ol/style/RegularShape.js"],"sourcesContent":["/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener, thisArg) {\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener, thisArg) {}\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  render_(atlasManager) {\n    let imageSize;\n    let lineCap = '';\n    let lineJoin = '';\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      const context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      const hasCustomHitDetectionImage = !this.fill_;\n      let renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      const id = this.getChecksum();\n      const info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    const strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    const fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    const recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      const checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  }\n}\n\n\nexport default RegularShape;\n"],"names":["const","super","let"],"mappings":"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"}