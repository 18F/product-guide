{"version":3,"file":"Style.js","sources":["../../../src/ol/style/Style.js"],"sourcesContent":["/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {import(\"./Image.js\").default}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n"],"names":["const","let"],"mappings":"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"}