{"version":3,"file":"Kinetic.js","sources":["../../src/ol/Kinetic.js"],"sourcesContent":["/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n"],"names":["const","let"],"mappings":"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"}