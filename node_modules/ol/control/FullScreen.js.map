{"version":3,"file":"FullScreen.js","sources":["../../../src/ol/control/FullScreen.js"],"sourcesContent":["/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nclass FullScreen extends Control {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.cssClassName_ + '-true';\n    const inactiveClassName = this.cssClassName_ + '-false';\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  }\n}\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n"],"names":["const","let","super"],"mappings":"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"}