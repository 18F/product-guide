{"version":3,"file":"MousePosition.js","sources":["../../../src/ol/control/MousePosition.js"],"sourcesContent":["/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n}\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n"],"names":["const","super","let"],"mappings":"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"}