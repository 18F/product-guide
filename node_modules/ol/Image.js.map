{"version":3,"file":"Image.js","sources":["../../src/ol/Image.js"],"sourcesContent":["/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\nexport default ImageWrapper;\n"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,UAAU,MAAM,iBAAiB,CAAC;AACzC,QAAQ,UAAU,EAAE,aAAa,OAAO,aAAa,CAAC;AACtD,OAAO,SAAS,MAAM,uBAAuB,CAAC;AAC9C,QAAQ,SAAS,OAAO,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBtC,IAAM,YAAY,GAAkB;EAUlC,qBAAW,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,WAAW,EAAE,iBAAiB,EAAE;;IAE/EA,cAAK,OAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;;;;;;IAMvD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;;;;;;IAMhB,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;IAC1B,IAAI,WAAW,KAAK,IAAI,EAAE;MACxB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;KACvC;;;;;;IAMD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;;;;;;IAM/B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC;;;;;;IAM7B,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;;;;;;oDAE7C;;;;;;yBAMD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB;;;;;;;yBAOD,+CAAiB,GAAG;IAClB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;IACtB,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;yBAOD,6CAAgB,GAAG;IACjB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;MACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC/D;IACD,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;IACtB,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;;;yBASD,qBAAI,GAAG;IACL,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,EAAE;MACnE,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAAC,OAAO,EAAE,CAAC;MACf,IAAI,CAAC,kBAAkB,GAAG;QACxB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK;UACrC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;QAC/B,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI;UACpC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC;OAC/B,CAAC;MACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1C;IACF;;;;;yBAKD,6BAAQ,CAAC,KAAK,EAAE;IACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACrB;;;;;;;yBAOD,yCAAc,GAAG;IACf,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;GAChC;;;EAtHwB,YAuH1B;;;AAGD,eAAe,YAAY,CAAC;"}