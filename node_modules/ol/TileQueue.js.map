{"version":3,"file":"TileQueue.js","sources":["../../src/ol/TileQueue.js"],"sourcesContent":["/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nclass TileQueue extends PriorityQueue {\n\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let abortedTiles = false;\n    let state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  }\n}\n\n\nexport default TileQueue;\n"],"names":["super","const","let"],"mappings":"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"}