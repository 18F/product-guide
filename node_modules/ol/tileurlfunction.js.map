{"version":3,"file":"tileurlfunction.js","sources":["../../src/ol/tileurlfunction.js"],"sourcesContent":["/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n"],"names":["const","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,cAAc,CAAC;AACpC,QAAQ,MAAM,OAAO,WAAW,CAAC;AACjC,QAAQ,IAAI,IAAI,aAAa,OAAO,gBAAgB,CAAC;;;;;;;;AAQrD,OAAO,SAAS,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,EAAE;EACrDA,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;EACxBA,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;EACxBA,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;EACxBA,GAAK,CAAC,UAAU,GAAG,SAAS,CAAC;EAC7B,OAAO;;;;;;;IAOL,SAAS,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;MAC1C,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,SAAS,CAAC;OAClB,MAAM;QACL,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;WACrD,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;WACxC,OAAO,CAAC,MAAM,EAAE,WAAW;YAC1BA,GAAK,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;WACrB,CAAC;WACD,OAAO,CAAC,UAAU,EAAE,WAAW;YAC9BA,GAAK,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvBA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAClBA,GAAK,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;WACrB,CAAC,CAAC;OACN;KACF;GACF,CAAC;CACH;;;;;;;;AAQD,OAAO,SAAS,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE;EACvDA,GAAK,CAAC,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;EAC7BA,GAAK,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;EACxC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAgB,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;GAClE;EACD,OAAO,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;CACrD;;;;;;;AAOD,OAAO,SAAS,0BAA0B,CAAC,gBAAgB,EAAE;EAC3D,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;IACjC,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC;GAC5B;EACD,OAAO;;;;;;;IAOL,SAAS,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;MAC1C,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,SAAS,CAAC;OAClB,MAAM;QACLD,GAAK,CAAC,CAAC,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;QACnCA,GAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACjD,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;OACnE;KACF;GACF,CAAC;CACH;;;;;;;;;AASD,OAAO,SAAS,mBAAmB,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;EACrE,OAAO,SAAS,CAAC;CAClB;;;;;;;AAOD,OAAO,SAAS,SAAS,CAAC,GAAG,EAAE;EAC7BA,GAAK,CAAC,IAAI,GAAG,EAAE,CAAC;EAChBC,GAAG,CAAC,KAAK,GAAG,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC5C,IAAI,KAAK,EAAE;;IAETD,GAAK,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7CA,GAAK,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5CC,GAAG,CAAC,QAAQ,CAAC;IACb,KAAK,QAAQ,GAAG,aAAa,EAAE,QAAQ,IAAI,YAAY,EAAE,EAAE,QAAQ,EAAE;MACnE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjE;IACD,OAAO,IAAI,CAAC;GACb;EACD,KAAK,GAAG,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC5C,IAAI,KAAK,EAAE;;IAETD,GAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpC,KAAKC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;MACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;KAChD;IACD,OAAO,IAAI,CAAC;GACb;EACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACf,OAAO,IAAI,CAAC;CACb;"}