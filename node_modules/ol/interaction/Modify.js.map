{"version":3,"file":"Modify.js","sources":["../../../src/ol/interaction/Modify.js"],"sourcesContent":["/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    const /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n    const centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      const geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    const vertex = evt.coordinate;\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const depth = segmentData.depth;\n      const geometry = segmentData.geometry;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const insertVertices = [];\n      const geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      const vertex = geometry.getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.feature);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = /** @type {number} */ (segmentData.index);\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    const newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    const newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          const newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n"],"names":["const","super","let"],"mappings":"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"}