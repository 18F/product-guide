{"version":3,"file":"PinchZoom.js","sources":["../../../src/ol/interaction/PinchZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const maxResolution = view.getMaxResolution();\n    const minResolution = view.getMinResolution();\n    let newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      const resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        const direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n"],"names":["const","super","let"],"mappings":"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"}