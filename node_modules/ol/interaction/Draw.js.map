{"version":3,"file":"Draw.js","sources":["../../../src/ol/interaction/Draw.js"],"sourcesContent":["/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          const circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    const circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  addToDrawing_(event) {\n    const coordinate = event.coordinate;\n    const geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    let coordinates;\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = /** @type {LineCoordType} */ (coordinates)[0];\n    const end = /** @type {LineCoordType} */ (coordinates)[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n"],"names":["const","super","let"],"mappings":"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"}