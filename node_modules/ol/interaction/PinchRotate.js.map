{"version":3,"file":"PinchRotate.js","sources":["../../../src/ol/interaction/PinchRotate.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        const rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n"],"names":["const","super","let"],"mappings":"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"}