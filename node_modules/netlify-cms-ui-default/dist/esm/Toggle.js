"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleHandle = exports.ToggleBackground = exports.ToggleContainer = exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@emotion/core");

var _reactToggled = _interopRequireDefault(require("react-toggled"));

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

const ToggleContainer = (0, _styledBase.default)("button", {
  target: "e1keeugh0",
  label: "ToggleContainer"
})(process.env.NODE_ENV === "production" ? {
  name: "x59i5d",
  styles: "display:inline-flex;align-items:center;justify-content:center;position:relative;width:40px;height:20px;cursor:pointer;border:none;padding:0;margin:0;background:transparent;"
} : {
  name: "x59i5d",
  styles: "display:inline-flex;align-items:center;justify-content:center;position:relative;width:40px;height:20px;cursor:pointer;border:none;padding:0;margin:0;background:transparent;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2dnbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT3FDIiwiZmlsZSI6Ii4uLy4uL3NyYy9Ub2dnbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IFJlYWN0VG9nZ2xlZCBmcm9tICdyZWFjdC10b2dnbGVkJztcbmltcG9ydCB7IGNvbG9ycywgY29sb3JzUmF3LCBzaGFkb3dzLCB0cmFuc2l0aW9ucyB9IGZyb20gJy4vc3R5bGVzJztcblxuY29uc3QgVG9nZ2xlQ29udGFpbmVyID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgVG9nZ2xlSGFuZGxlID0gc3R5bGVkLnNwYW5gXG4gICR7c2hhZG93cy5kcm9wRGVlcH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LndoaXRlfTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR7dHJhbnNpdGlvbnMubWFpbn07XG5cbiAgJHtwcm9wcyA9PlxuICAgIHByb3BzLmlzQWN0aXZlICYmXG4gICAgY3NzYFxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIGB9O1xuYDtcblxuY29uc3QgVG9nZ2xlQmFja2dyb3VuZCA9IHN0eWxlZC5zcGFuYFxuICB3aWR0aDogMzRweDtcbiAgaGVpZ2h0OiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmV9O1xuYDtcblxuY29uc3QgVG9nZ2xlID0gKHtcbiAgaWQsXG4gIGFjdGl2ZSxcbiAgb25DaGFuZ2UsXG4gIG9uRm9jdXMsXG4gIG9uQmx1cixcbiAgY2xhc3NOYW1lLFxuICBDb250YWluZXIgPSBUb2dnbGVDb250YWluZXIsXG4gIEJhY2tncm91bmQgPSBUb2dnbGVCYWNrZ3JvdW5kLFxuICBIYW5kbGUgPSBUb2dnbGVIYW5kbGUsXG59KSA9PiAoXG4gIDxSZWFjdFRvZ2dsZWQgb249e2FjdGl2ZX0gb25Ub2dnbGU9e29uQ2hhbmdlfT5cbiAgICB7KHsgb24sIGdldFRvZ2dsZXJQcm9wcyB9KSA9PiAoXG4gICAgICA8Q29udGFpbmVyXG4gICAgICAgIGlkPXtpZH1cbiAgICAgICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lfVxuICAgICAgICB7Li4uZ2V0VG9nZ2xlclByb3BzKHtcbiAgICAgICAgICByb2xlOiAnc3dpdGNoJyxcbiAgICAgICAgICAnYXJpYS1jaGVja2VkJzogb24udG9TdHJpbmcoKSxcbiAgICAgICAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgICAgIH0pfVxuICAgICAgPlxuICAgICAgICA8QmFja2dyb3VuZCBpc0FjdGl2ZT17b259IC8+XG4gICAgICAgIDxIYW5kbGUgaXNBY3RpdmU9e29ufSAvPlxuICAgICAgPC9Db250YWluZXI+XG4gICAgKX1cbiAgPC9SZWFjdFRvZ2dsZWQ+XG4pO1xuXG5Ub2dnbGUucHJvcFR5cGVzID0ge1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBvbkZvY3VzOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBDb250YWluZXI6IFByb3BUeXBlcy5mdW5jLFxuICBCYWNrZ3JvdW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgSGFuZGxlOiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cbmNvbnN0IFN0eWxlZFRvZ2dsZSA9IHN0eWxlZChUb2dnbGUpYGA7XG5cbmV4cG9ydCB7IFN0eWxlZFRvZ2dsZSBhcyBkZWZhdWx0LCBUb2dnbGVDb250YWluZXIsIFRvZ2dsZUJhY2tncm91bmQsIFRvZ2dsZUhhbmRsZSB9O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.ToggleContainer = ToggleContainer;

var _ref = process.env.NODE_ENV === "production" ? {
  name: "11uzlui-ToggleHandle",
  styles: "transform:translateX(20px);;label:ToggleHandle;"
} : {
  name: "11uzlui-ToggleHandle",
  styles: "transform:translateX(20px);;label:ToggleHandle;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2dnbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NPIiwiZmlsZSI6Ii4uLy4uL3NyYy9Ub2dnbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IFJlYWN0VG9nZ2xlZCBmcm9tICdyZWFjdC10b2dnbGVkJztcbmltcG9ydCB7IGNvbG9ycywgY29sb3JzUmF3LCBzaGFkb3dzLCB0cmFuc2l0aW9ucyB9IGZyb20gJy4vc3R5bGVzJztcblxuY29uc3QgVG9nZ2xlQ29udGFpbmVyID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgVG9nZ2xlSGFuZGxlID0gc3R5bGVkLnNwYW5gXG4gICR7c2hhZG93cy5kcm9wRGVlcH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LndoaXRlfTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR7dHJhbnNpdGlvbnMubWFpbn07XG5cbiAgJHtwcm9wcyA9PlxuICAgIHByb3BzLmlzQWN0aXZlICYmXG4gICAgY3NzYFxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAgIGB9O1xuYDtcblxuY29uc3QgVG9nZ2xlQmFja2dyb3VuZCA9IHN0eWxlZC5zcGFuYFxuICB3aWR0aDogMzRweDtcbiAgaGVpZ2h0OiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmV9O1xuYDtcblxuY29uc3QgVG9nZ2xlID0gKHtcbiAgaWQsXG4gIGFjdGl2ZSxcbiAgb25DaGFuZ2UsXG4gIG9uRm9jdXMsXG4gIG9uQmx1cixcbiAgY2xhc3NOYW1lLFxuICBDb250YWluZXIgPSBUb2dnbGVDb250YWluZXIsXG4gIEJhY2tncm91bmQgPSBUb2dnbGVCYWNrZ3JvdW5kLFxuICBIYW5kbGUgPSBUb2dnbGVIYW5kbGUsXG59KSA9PiAoXG4gIDxSZWFjdFRvZ2dsZWQgb249e2FjdGl2ZX0gb25Ub2dnbGU9e29uQ2hhbmdlfT5cbiAgICB7KHsgb24sIGdldFRvZ2dsZXJQcm9wcyB9KSA9PiAoXG4gICAgICA8Q29udGFpbmVyXG4gICAgICAgIGlkPXtpZH1cbiAgICAgICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lfVxuICAgICAgICB7Li4uZ2V0VG9nZ2xlclByb3BzKHtcbiAgICAgICAgICByb2xlOiAnc3dpdGNoJyxcbiAgICAgICAgICAnYXJpYS1jaGVja2VkJzogb24udG9TdHJpbmcoKSxcbiAgICAgICAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgICAgIH0pfVxuICAgICAgPlxuICAgICAgICA8QmFja2dyb3VuZCBpc0FjdGl2ZT17b259IC8+XG4gICAgICAgIDxIYW5kbGUgaXNBY3RpdmU9e29ufSAvPlxuICAgICAgPC9Db250YWluZXI+XG4gICAgKX1cbiAgPC9SZWFjdFRvZ2dsZWQ+XG4pO1xuXG5Ub2dnbGUucHJvcFR5cGVzID0ge1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBvbkZvY3VzOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBDb250YWluZXI6IFByb3BUeXBlcy5mdW5jLFxuICBCYWNrZ3JvdW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgSGFuZGxlOiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cbmNvbnN0IFN0eWxlZFRvZ2dsZSA9IHN0eWxlZChUb2dnbGUpYGA7XG5cbmV4cG9ydCB7IFN0eWxlZFRvZ2dsZSBhcyBkZWZhdWx0LCBUb2dnbGVDb250YWluZXIsIFRvZ2dsZUJhY2tncm91bmQsIFRvZ2dsZUhhbmRsZSB9O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const ToggleHandle = (0, _styledBase.default)("span", {
  target: "e1keeugh1",
  label: "ToggleHandle"
})(_styles.shadows.dropDeep, ";position:absolute;left:0;top:0;width:20px;height:20px;border-radius:50%;background-color:", _styles.colorsRaw.white, ";transition:transform ", _styles.transitions.main, ";", props => props.isActive && _ref, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2dnbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUJnQyIsImZpbGUiOiIuLi8uLi9zcmMvVG9nZ2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBSZWFjdFRvZ2dsZWQgZnJvbSAncmVhY3QtdG9nZ2xlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGNvbG9yc1Jhdywgc2hhZG93cywgdHJhbnNpdGlvbnMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmNvbnN0IFRvZ2dsZUNvbnRhaW5lciA9IHN0eWxlZC5idXR0b25gXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbmA7XG5cbmNvbnN0IFRvZ2dsZUhhbmRsZSA9IHN0eWxlZC5zcGFuYFxuICAke3NoYWRvd3MuZHJvcERlZXB9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3RyYW5zaXRpb25zLm1haW59O1xuXG4gICR7cHJvcHMgPT5cbiAgICBwcm9wcy5pc0FjdGl2ZSAmJlxuICAgIGNzc2BcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICBgfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZUJhY2tncm91bmQgPSBzdHlsZWQuc3BhbmBcbiAgd2lkdGg6IDM0cHg7XG4gIGhlaWdodDogMTRweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZSA9ICh7XG4gIGlkLFxuICBhY3RpdmUsXG4gIG9uQ2hhbmdlLFxuICBvbkZvY3VzLFxuICBvbkJsdXIsXG4gIGNsYXNzTmFtZSxcbiAgQ29udGFpbmVyID0gVG9nZ2xlQ29udGFpbmVyLFxuICBCYWNrZ3JvdW5kID0gVG9nZ2xlQmFja2dyb3VuZCxcbiAgSGFuZGxlID0gVG9nZ2xlSGFuZGxlLFxufSkgPT4gKFxuICA8UmVhY3RUb2dnbGVkIG9uPXthY3RpdmV9IG9uVG9nZ2xlPXtvbkNoYW5nZX0+XG4gICAgeyh7IG9uLCBnZXRUb2dnbGVyUHJvcHMgfSkgPT4gKFxuICAgICAgPENvbnRhaW5lclxuICAgICAgICBpZD17aWR9XG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgIG9uQmx1cj17b25CbHVyfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgey4uLmdldFRvZ2dsZXJQcm9wcyh7XG4gICAgICAgICAgcm9sZTogJ3N3aXRjaCcsXG4gICAgICAgICAgJ2FyaWEtY2hlY2tlZCc6IG9uLnRvU3RyaW5nKCksXG4gICAgICAgICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPEJhY2tncm91bmQgaXNBY3RpdmU9e29ufSAvPlxuICAgICAgICA8SGFuZGxlIGlzQWN0aXZlPXtvbn0gLz5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgICl9XG4gIDwvUmVhY3RUb2dnbGVkPlxuKTtcblxuVG9nZ2xlLnByb3BUeXBlcyA9IHtcbiAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgQ29udGFpbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgQmFja2dyb3VuZDogUHJvcFR5cGVzLmZ1bmMsXG4gIEhhbmRsZTogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5jb25zdCBTdHlsZWRUb2dnbGUgPSBzdHlsZWQoVG9nZ2xlKWBgO1xuXG5leHBvcnQgeyBTdHlsZWRUb2dnbGUgYXMgZGVmYXVsdCwgVG9nZ2xlQ29udGFpbmVyLCBUb2dnbGVCYWNrZ3JvdW5kLCBUb2dnbGVIYW5kbGUgfTtcbiJdfQ== */"));
exports.ToggleHandle = ToggleHandle;
const ToggleBackground = (0, _styledBase.default)("span", {
  target: "e1keeugh2",
  label: "ToggleBackground"
})("width:34px;height:14px;border-radius:10px;background-color:", _styles.colors.active, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2dnbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUNvQyIsImZpbGUiOiIuLi8uLi9zcmMvVG9nZ2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBSZWFjdFRvZ2dsZWQgZnJvbSAncmVhY3QtdG9nZ2xlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGNvbG9yc1Jhdywgc2hhZG93cywgdHJhbnNpdGlvbnMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmNvbnN0IFRvZ2dsZUNvbnRhaW5lciA9IHN0eWxlZC5idXR0b25gXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbmA7XG5cbmNvbnN0IFRvZ2dsZUhhbmRsZSA9IHN0eWxlZC5zcGFuYFxuICAke3NoYWRvd3MuZHJvcERlZXB9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3RyYW5zaXRpb25zLm1haW59O1xuXG4gICR7cHJvcHMgPT5cbiAgICBwcm9wcy5pc0FjdGl2ZSAmJlxuICAgIGNzc2BcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICBgfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZUJhY2tncm91bmQgPSBzdHlsZWQuc3BhbmBcbiAgd2lkdGg6IDM0cHg7XG4gIGhlaWdodDogMTRweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZSA9ICh7XG4gIGlkLFxuICBhY3RpdmUsXG4gIG9uQ2hhbmdlLFxuICBvbkZvY3VzLFxuICBvbkJsdXIsXG4gIGNsYXNzTmFtZSxcbiAgQ29udGFpbmVyID0gVG9nZ2xlQ29udGFpbmVyLFxuICBCYWNrZ3JvdW5kID0gVG9nZ2xlQmFja2dyb3VuZCxcbiAgSGFuZGxlID0gVG9nZ2xlSGFuZGxlLFxufSkgPT4gKFxuICA8UmVhY3RUb2dnbGVkIG9uPXthY3RpdmV9IG9uVG9nZ2xlPXtvbkNoYW5nZX0+XG4gICAgeyh7IG9uLCBnZXRUb2dnbGVyUHJvcHMgfSkgPT4gKFxuICAgICAgPENvbnRhaW5lclxuICAgICAgICBpZD17aWR9XG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgIG9uQmx1cj17b25CbHVyfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgey4uLmdldFRvZ2dsZXJQcm9wcyh7XG4gICAgICAgICAgcm9sZTogJ3N3aXRjaCcsXG4gICAgICAgICAgJ2FyaWEtY2hlY2tlZCc6IG9uLnRvU3RyaW5nKCksXG4gICAgICAgICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPEJhY2tncm91bmQgaXNBY3RpdmU9e29ufSAvPlxuICAgICAgICA8SGFuZGxlIGlzQWN0aXZlPXtvbn0gLz5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgICl9XG4gIDwvUmVhY3RUb2dnbGVkPlxuKTtcblxuVG9nZ2xlLnByb3BUeXBlcyA9IHtcbiAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgQ29udGFpbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgQmFja2dyb3VuZDogUHJvcFR5cGVzLmZ1bmMsXG4gIEhhbmRsZTogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5jb25zdCBTdHlsZWRUb2dnbGUgPSBzdHlsZWQoVG9nZ2xlKWBgO1xuXG5leHBvcnQgeyBTdHlsZWRUb2dnbGUgYXMgZGVmYXVsdCwgVG9nZ2xlQ29udGFpbmVyLCBUb2dnbGVCYWNrZ3JvdW5kLCBUb2dnbGVIYW5kbGUgfTtcbiJdfQ== */"));
exports.ToggleBackground = ToggleBackground;

const Toggle = ({
  id,
  active,
  onChange,
  onFocus,
  onBlur,
  className,
  Container = ToggleContainer,
  Background = ToggleBackground,
  Handle = ToggleHandle
}) => (0, _core.jsx)(_reactToggled.default, {
  on: active,
  onToggle: onChange
}, ({
  on,
  getTogglerProps
}) => (0, _core.jsx)(Container, _extends({
  id: id,
  onFocus: onFocus,
  onBlur: onBlur,
  className: className
}, getTogglerProps({
  role: 'switch',
  'aria-checked': on.toString(),
  'aria-expanded': null
})), (0, _core.jsx)(Background, {
  isActive: on
}), (0, _core.jsx)(Handle, {
  isActive: on
})));

Toggle.propTypes = {
  id: _propTypes.default.string,
  active: _propTypes.default.bool,
  onChange: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  className: _propTypes.default.string,
  Container: _propTypes.default.func,
  Background: _propTypes.default.func,
  Handle: _propTypes.default.func
};
const StyledToggle = ( /*#__PURE__*/0, _styledBase.default)(Toggle, {
  target: "e1keeugh3",
  label: "StyledToggle"
})(process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2dnbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUZtQyIsImZpbGUiOiIuLi8uLi9zcmMvVG9nZ2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBSZWFjdFRvZ2dsZWQgZnJvbSAncmVhY3QtdG9nZ2xlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGNvbG9yc1Jhdywgc2hhZG93cywgdHJhbnNpdGlvbnMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmNvbnN0IFRvZ2dsZUNvbnRhaW5lciA9IHN0eWxlZC5idXR0b25gXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbmA7XG5cbmNvbnN0IFRvZ2dsZUhhbmRsZSA9IHN0eWxlZC5zcGFuYFxuICAke3NoYWRvd3MuZHJvcERlZXB9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3RyYW5zaXRpb25zLm1haW59O1xuXG4gICR7cHJvcHMgPT5cbiAgICBwcm9wcy5pc0FjdGl2ZSAmJlxuICAgIGNzc2BcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcbiAgICBgfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZUJhY2tncm91bmQgPSBzdHlsZWQuc3BhbmBcbiAgd2lkdGg6IDM0cHg7XG4gIGhlaWdodDogMTRweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbmA7XG5cbmNvbnN0IFRvZ2dsZSA9ICh7XG4gIGlkLFxuICBhY3RpdmUsXG4gIG9uQ2hhbmdlLFxuICBvbkZvY3VzLFxuICBvbkJsdXIsXG4gIGNsYXNzTmFtZSxcbiAgQ29udGFpbmVyID0gVG9nZ2xlQ29udGFpbmVyLFxuICBCYWNrZ3JvdW5kID0gVG9nZ2xlQmFja2dyb3VuZCxcbiAgSGFuZGxlID0gVG9nZ2xlSGFuZGxlLFxufSkgPT4gKFxuICA8UmVhY3RUb2dnbGVkIG9uPXthY3RpdmV9IG9uVG9nZ2xlPXtvbkNoYW5nZX0+XG4gICAgeyh7IG9uLCBnZXRUb2dnbGVyUHJvcHMgfSkgPT4gKFxuICAgICAgPENvbnRhaW5lclxuICAgICAgICBpZD17aWR9XG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgIG9uQmx1cj17b25CbHVyfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgey4uLmdldFRvZ2dsZXJQcm9wcyh7XG4gICAgICAgICAgcm9sZTogJ3N3aXRjaCcsXG4gICAgICAgICAgJ2FyaWEtY2hlY2tlZCc6IG9uLnRvU3RyaW5nKCksXG4gICAgICAgICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPEJhY2tncm91bmQgaXNBY3RpdmU9e29ufSAvPlxuICAgICAgICA8SGFuZGxlIGlzQWN0aXZlPXtvbn0gLz5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgICl9XG4gIDwvUmVhY3RUb2dnbGVkPlxuKTtcblxuVG9nZ2xlLnByb3BUeXBlcyA9IHtcbiAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgQ29udGFpbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgQmFja2dyb3VuZDogUHJvcFR5cGVzLmZ1bmMsXG4gIEhhbmRsZTogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5jb25zdCBTdHlsZWRUb2dnbGUgPSBzdHlsZWQoVG9nZ2xlKWBgO1xuXG5leHBvcnQgeyBTdHlsZWRUb2dnbGUgYXMgZGVmYXVsdCwgVG9nZ2xlQ29udGFpbmVyLCBUb2dnbGVCYWNrZ3JvdW5kLCBUb2dnbGVIYW5kbGUgfTtcbiJdfQ== */");
exports.default = StyledToggle;