"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@emotion/core");

var _reactDatetime = _interopRequireDefault(require("react-datetime/css/react-datetime.css"));

var _reactDatetime2 = _interopRequireDefault(require("react-datetime"));

var _moment = _interopRequireDefault(require("moment"));

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1yjlc1u-DateTimeControl",
  styles: "position:absolute;right:20px;transform:translateY(-40px);width:fit-content;z-index:1;;label:DateTimeControl;"
} : {
  name: "1yjlc1u-DateTimeControl",
  styles: "position:absolute;right:20px;transform:translateY(-40px);width:fit-content;z-index:1;;label:DateTimeControl;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUlrQiIsImZpbGUiOiIuLi8uLi9zcmMvRGF0ZVRpbWVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGpzeCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVhY3REYXRlVGltZVN0eWxlcyBmcm9tICdyZWFjdC1kYXRldGltZS9jc3MvcmVhY3QtZGF0ZXRpbWUuY3NzJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVUaW1lQ29udHJvbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZmllbGQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBmb3JJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWVXcmFwcGVyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgc2V0QWN0aXZlU3R5bGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc2V0SW5hY3RpdmVTdHlsZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICB9O1xuXG4gIGdldEZvcm1hdHMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBmb3JtYXQgPSBmaWVsZC5nZXQoJ2Zvcm1hdCcpO1xuXG4gICAgLy8gZGF0ZUZvcm1hdCBhbmQgdGltZUZvcm1hdCBhcmUgc3RyaWN0bHkgZm9yIG1vZGlmeWluZ1xuICAgIC8vIGlucHV0IGZpZWxkIHdpdGggdGhlIGRhdGUvdGltZSBwaWNrZXJzXG4gICAgY29uc3QgZGF0ZUZvcm1hdCA9IGZpZWxkLmdldCgnZGF0ZUZvcm1hdCcpO1xuICAgIC8vIHNob3cgdGltZS1waWNrZXI/IGZhbHNlIGhpZGVzIGl0LCB0cnVlIHNob3dzIGl0IHVzaW5nIGRlZmF1bHQgZm9ybWF0XG4gICAgbGV0IHRpbWVGb3JtYXQgPSBmaWVsZC5nZXQoJ3RpbWVGb3JtYXQnKTtcbiAgICBpZiAodHlwZW9mIHRpbWVGb3JtYXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aW1lRm9ybWF0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0LFxuICAgICAgZGF0ZUZvcm1hdCxcbiAgICAgIHRpbWVGb3JtYXQsXG4gICAgfTtcbiAgfVxuXG4gIGdldERlZmF1bHRWYWx1ZSgpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGZpZWxkLmdldCgnZGVmYXVsdCcpO1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cblxuICBnZXRQaWNrZXJVdGMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWNrZXJVdGMgPSBmaWVsZC5nZXQoJ3BpY2tlclV0YycpO1xuICAgIHJldHVybiBwaWNrZXJVdGM7XG4gIH1cblxuICBmb3JtYXRzID0gdGhpcy5nZXRGb3JtYXRzKCk7XG4gIGRlZmF1bHRWYWx1ZSA9IHRoaXMuZ2V0RGVmYXVsdFZhbHVlKCk7XG4gIHBpY2tlclV0YyA9IHRoaXMuZ2V0UGlja2VyVXRjKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY3VycmVudCBkYXRlIGFzIGRlZmF1bHQgdmFsdWUgaWYgbm8gdmFsdWUgaXMgcHJvdmlkZWQgYW5kIGRlZmF1bHQgaXMgYWJzZW50LiBBblxuICAgICAqIGVtcHR5IGRlZmF1bHQgc3RyaW5nIG1lYW5zIHRoZSB2YWx1ZSBpcyBpbnRlbnRpb25hbGx5IGJsYW5rLlxuICAgICAqL1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UodGhpcy5kZWZhdWx0VmFsdWUgPT09IHVuZGVmaW5lZCA/IG5ldyBEYXRlKCkgOiB0aGlzLmRlZmF1bHRWYWx1ZSk7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cblxuICAvLyBEYXRlIGlzIHZhbGlkIGlmIGRhdGV0aW1lIGlzIGEgbW9tZW50IG9yIERhdGUgb2JqZWN0IG90aGVyd2lzZSBpdCdzIGEgc3RyaW5nLlxuICAvLyBIYW5kbGUgdGhlIGVtcHR5IGNhc2UsIGlmIHRoZSB1c2VyIHdhbnRzIHRvIGVtcHR5IHRoZSBmaWVsZC5cbiAgaXNWYWxpZERhdGUgPSBkYXRldGltZSA9PlxuICAgIG1vbWVudC5pc01vbWVudChkYXRldGltZSkgfHwgZGF0ZXRpbWUgaW5zdGFuY2VvZiBEYXRlIHx8IGRhdGV0aW1lID09PSAnJztcblxuICBoYW5kbGVDaGFuZ2UgPSBkYXRldGltZSA9PiB7XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBkYXRlIG9ubHkgaWYgaXQgaXMgdmFsaWQuXG4gICAgICovXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIC8qKlxuICAgICAqIFByb2R1Y2UgYSBmb3JtYXR0ZWQgc3RyaW5nIG9ubHkgaWYgYSBmb3JtYXQgaXMgc2V0IGluIHRoZSBjb25maWcuXG4gICAgICogT3RoZXJ3aXNlIHByb2R1Y2UgYSBkYXRlIG9iamVjdC5cbiAgICAgKi9cbiAgICBpZiAoZm9ybWF0KSB7XG4gICAgICBjb25zdCBmb3JtYXR0ZWRWYWx1ZSA9IGRhdGV0aW1lID8gbW9tZW50KGRhdGV0aW1lKS5mb3JtYXQoZm9ybWF0KSA6ICcnO1xuICAgICAgb25DaGFuZ2UoZm9ybWF0dGVkVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IG1vbWVudC5pc01vbWVudChkYXRldGltZSkgPyBkYXRldGltZS50b0RhdGUoKSA6IGRhdGV0aW1lO1xuICAgICAgb25DaGFuZ2UodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBvbkJsdXIgPSBkYXRldGltZSA9PiB7XG4gICAgY29uc3QgeyBzZXRJbmFjdGl2ZVN0eWxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgY29uc3QgcGFyc2VkRGF0ZSA9IG1vbWVudChkYXRldGltZSk7XG5cbiAgICAgIGlmIChwYXJzZWREYXRlLmlzVmFsaWQoKSkge1xuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZShkYXRldGltZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWxlcnQoJ1RoZSBkYXRlIHlvdSBlbnRlcmVkIGlzIGludmFsaWQuJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2V0SW5hY3RpdmVTdHlsZSgpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGZvcklELCB2YWx1ZSwgY2xhc3NOYW1lV3JhcHBlciwgc2V0QWN0aXZlU3R5bGUsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQsIGRhdGVGb3JtYXQsIHRpbWVGb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICR7cmVhY3REYXRlVGltZVN0eWxlc307XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBgfVxuICAgICAgPlxuICAgICAgICA8RGF0ZVRpbWVcbiAgICAgICAgICBkYXRlRm9ybWF0PXtkYXRlRm9ybWF0fVxuICAgICAgICAgIHRpbWVGb3JtYXQ9e3RpbWVGb3JtYXR9XG4gICAgICAgICAgdmFsdWU9e21vbWVudCh2YWx1ZSwgZm9ybWF0KX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgb25Gb2N1cz17c2V0QWN0aXZlU3R5bGV9XG4gICAgICAgICAgb25CbHVyPXt0aGlzLm9uQmx1cn1cbiAgICAgICAgICBpbnB1dFByb3BzPXt7IGNsYXNzTmFtZTogY2xhc3NOYW1lV3JhcHBlciwgaWQ6IGZvcklEIH19XG4gICAgICAgICAgdXRjPXt0aGlzLnBpY2tlclV0Y31cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICR7YnV0dG9ucy5idXR0b259XG4gICAgICAgICAgICAgICR7YnV0dG9ucy5kZWZhdWx0fVxuICAgICAgICAgICAgICAke2J1dHRvbnMubGlnaHRCbHVlfVxuICAgICAgICAgICAgICAke2J1dHRvbnMuc21hbGx9XG4gICAgICAgICAgYH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UobW9tZW50KCkpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnZWRpdG9yLmVkaXRvcldpZGdldHMuZGF0ZXRpbWUubm93Jyl9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

class DateTimeControl extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "formats", this.getFormats());

    _defineProperty(this, "defaultValue", this.getDefaultValue());

    _defineProperty(this, "pickerUtc", this.getPickerUtc());

    _defineProperty(this, "isValidDate", datetime => _moment.default.isMoment(datetime) || datetime instanceof Date || datetime === '');

    _defineProperty(this, "handleChange", datetime => {
      /**
       * Set the date only if it is valid.
       */
      if (!this.isValidDate(datetime)) {
        return;
      }

      const {
        onChange
      } = this.props;
      const {
        format
      } = this.formats;
      /**
       * Produce a formatted string only if a format is set in the config.
       * Otherwise produce a date object.
       */

      if (format) {
        const formattedValue = datetime ? (0, _moment.default)(datetime).format(format) : '';
        onChange(formattedValue);
      } else {
        const value = _moment.default.isMoment(datetime) ? datetime.toDate() : datetime;
        onChange(value);
      }
    });

    _defineProperty(this, "onBlur", datetime => {
      const {
        setInactiveStyle
      } = this.props;

      if (!this.isValidDate(datetime)) {
        const parsedDate = (0, _moment.default)(datetime);

        if (parsedDate.isValid()) {
          this.handleChange(datetime);
        } else {
          window.alert('The date you entered is invalid.');
        }
      }

      setInactiveStyle();
    });
  }

  getFormats() {
    const {
      field
    } = this.props;
    const format = field.get('format'); // dateFormat and timeFormat are strictly for modifying
    // input field with the date/time pickers

    const dateFormat = field.get('dateFormat'); // show time-picker? false hides it, true shows it using default format

    let timeFormat = field.get('timeFormat');

    if (typeof timeFormat === 'undefined') {
      timeFormat = true;
    }

    return {
      format,
      dateFormat,
      timeFormat
    };
  }

  getDefaultValue() {
    const {
      field
    } = this.props;
    const defaultValue = field.get('default');
    return defaultValue;
  }

  getPickerUtc() {
    const {
      field
    } = this.props;
    const pickerUtc = field.get('pickerUtc');
    return pickerUtc;
  }

  componentDidMount() {
    const {
      value
    } = this.props;
    /**
     * Set the current date as default value if no value is provided and default is absent. An
     * empty default string means the value is intentionally blank.
     */

    if (value === undefined) {
      setTimeout(() => {
        this.handleChange(this.defaultValue === undefined ? new Date() : this.defaultValue);
      }, 0);
    }
  } // Date is valid if datetime is a moment or Date object otherwise it's a string.
  // Handle the empty case, if the user wants to empty the field.


  render() {
    const {
      forID,
      value,
      classNameWrapper,
      setActiveStyle,
      t
    } = this.props;
    const {
      format,
      dateFormat,
      timeFormat
    } = this.formats;
    return (0, _core.jsx)("div", {
      css: /*#__PURE__*/(0, _core.css)(_reactDatetime.default, ";position:relative;;label:DateTimeControl;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUhnQiIsImZpbGUiOiIuLi8uLi9zcmMvRGF0ZVRpbWVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGpzeCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVhY3REYXRlVGltZVN0eWxlcyBmcm9tICdyZWFjdC1kYXRldGltZS9jc3MvcmVhY3QtZGF0ZXRpbWUuY3NzJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVUaW1lQ29udHJvbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZmllbGQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBmb3JJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWVXcmFwcGVyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgc2V0QWN0aXZlU3R5bGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc2V0SW5hY3RpdmVTdHlsZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICB9O1xuXG4gIGdldEZvcm1hdHMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBmb3JtYXQgPSBmaWVsZC5nZXQoJ2Zvcm1hdCcpO1xuXG4gICAgLy8gZGF0ZUZvcm1hdCBhbmQgdGltZUZvcm1hdCBhcmUgc3RyaWN0bHkgZm9yIG1vZGlmeWluZ1xuICAgIC8vIGlucHV0IGZpZWxkIHdpdGggdGhlIGRhdGUvdGltZSBwaWNrZXJzXG4gICAgY29uc3QgZGF0ZUZvcm1hdCA9IGZpZWxkLmdldCgnZGF0ZUZvcm1hdCcpO1xuICAgIC8vIHNob3cgdGltZS1waWNrZXI/IGZhbHNlIGhpZGVzIGl0LCB0cnVlIHNob3dzIGl0IHVzaW5nIGRlZmF1bHQgZm9ybWF0XG4gICAgbGV0IHRpbWVGb3JtYXQgPSBmaWVsZC5nZXQoJ3RpbWVGb3JtYXQnKTtcbiAgICBpZiAodHlwZW9mIHRpbWVGb3JtYXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aW1lRm9ybWF0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0LFxuICAgICAgZGF0ZUZvcm1hdCxcbiAgICAgIHRpbWVGb3JtYXQsXG4gICAgfTtcbiAgfVxuXG4gIGdldERlZmF1bHRWYWx1ZSgpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGZpZWxkLmdldCgnZGVmYXVsdCcpO1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cblxuICBnZXRQaWNrZXJVdGMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWNrZXJVdGMgPSBmaWVsZC5nZXQoJ3BpY2tlclV0YycpO1xuICAgIHJldHVybiBwaWNrZXJVdGM7XG4gIH1cblxuICBmb3JtYXRzID0gdGhpcy5nZXRGb3JtYXRzKCk7XG4gIGRlZmF1bHRWYWx1ZSA9IHRoaXMuZ2V0RGVmYXVsdFZhbHVlKCk7XG4gIHBpY2tlclV0YyA9IHRoaXMuZ2V0UGlja2VyVXRjKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY3VycmVudCBkYXRlIGFzIGRlZmF1bHQgdmFsdWUgaWYgbm8gdmFsdWUgaXMgcHJvdmlkZWQgYW5kIGRlZmF1bHQgaXMgYWJzZW50LiBBblxuICAgICAqIGVtcHR5IGRlZmF1bHQgc3RyaW5nIG1lYW5zIHRoZSB2YWx1ZSBpcyBpbnRlbnRpb25hbGx5IGJsYW5rLlxuICAgICAqL1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UodGhpcy5kZWZhdWx0VmFsdWUgPT09IHVuZGVmaW5lZCA/IG5ldyBEYXRlKCkgOiB0aGlzLmRlZmF1bHRWYWx1ZSk7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cblxuICAvLyBEYXRlIGlzIHZhbGlkIGlmIGRhdGV0aW1lIGlzIGEgbW9tZW50IG9yIERhdGUgb2JqZWN0IG90aGVyd2lzZSBpdCdzIGEgc3RyaW5nLlxuICAvLyBIYW5kbGUgdGhlIGVtcHR5IGNhc2UsIGlmIHRoZSB1c2VyIHdhbnRzIHRvIGVtcHR5IHRoZSBmaWVsZC5cbiAgaXNWYWxpZERhdGUgPSBkYXRldGltZSA9PlxuICAgIG1vbWVudC5pc01vbWVudChkYXRldGltZSkgfHwgZGF0ZXRpbWUgaW5zdGFuY2VvZiBEYXRlIHx8IGRhdGV0aW1lID09PSAnJztcblxuICBoYW5kbGVDaGFuZ2UgPSBkYXRldGltZSA9PiB7XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBkYXRlIG9ubHkgaWYgaXQgaXMgdmFsaWQuXG4gICAgICovXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIC8qKlxuICAgICAqIFByb2R1Y2UgYSBmb3JtYXR0ZWQgc3RyaW5nIG9ubHkgaWYgYSBmb3JtYXQgaXMgc2V0IGluIHRoZSBjb25maWcuXG4gICAgICogT3RoZXJ3aXNlIHByb2R1Y2UgYSBkYXRlIG9iamVjdC5cbiAgICAgKi9cbiAgICBpZiAoZm9ybWF0KSB7XG4gICAgICBjb25zdCBmb3JtYXR0ZWRWYWx1ZSA9IGRhdGV0aW1lID8gbW9tZW50KGRhdGV0aW1lKS5mb3JtYXQoZm9ybWF0KSA6ICcnO1xuICAgICAgb25DaGFuZ2UoZm9ybWF0dGVkVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IG1vbWVudC5pc01vbWVudChkYXRldGltZSkgPyBkYXRldGltZS50b0RhdGUoKSA6IGRhdGV0aW1lO1xuICAgICAgb25DaGFuZ2UodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBvbkJsdXIgPSBkYXRldGltZSA9PiB7XG4gICAgY29uc3QgeyBzZXRJbmFjdGl2ZVN0eWxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgY29uc3QgcGFyc2VkRGF0ZSA9IG1vbWVudChkYXRldGltZSk7XG5cbiAgICAgIGlmIChwYXJzZWREYXRlLmlzVmFsaWQoKSkge1xuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZShkYXRldGltZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWxlcnQoJ1RoZSBkYXRlIHlvdSBlbnRlcmVkIGlzIGludmFsaWQuJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2V0SW5hY3RpdmVTdHlsZSgpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGZvcklELCB2YWx1ZSwgY2xhc3NOYW1lV3JhcHBlciwgc2V0QWN0aXZlU3R5bGUsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQsIGRhdGVGb3JtYXQsIHRpbWVGb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICR7cmVhY3REYXRlVGltZVN0eWxlc307XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBgfVxuICAgICAgPlxuICAgICAgICA8RGF0ZVRpbWVcbiAgICAgICAgICBkYXRlRm9ybWF0PXtkYXRlRm9ybWF0fVxuICAgICAgICAgIHRpbWVGb3JtYXQ9e3RpbWVGb3JtYXR9XG4gICAgICAgICAgdmFsdWU9e21vbWVudCh2YWx1ZSwgZm9ybWF0KX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgb25Gb2N1cz17c2V0QWN0aXZlU3R5bGV9XG4gICAgICAgICAgb25CbHVyPXt0aGlzLm9uQmx1cn1cbiAgICAgICAgICBpbnB1dFByb3BzPXt7IGNsYXNzTmFtZTogY2xhc3NOYW1lV3JhcHBlciwgaWQ6IGZvcklEIH19XG4gICAgICAgICAgdXRjPXt0aGlzLnBpY2tlclV0Y31cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICR7YnV0dG9ucy5idXR0b259XG4gICAgICAgICAgICAgICR7YnV0dG9ucy5kZWZhdWx0fVxuICAgICAgICAgICAgICAke2J1dHRvbnMubGlnaHRCbHVlfVxuICAgICAgICAgICAgICAke2J1dHRvbnMuc21hbGx9XG4gICAgICAgICAgYH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UobW9tZW50KCkpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnZWRpdG9yLmVkaXRvcldpZGdldHMuZGF0ZXRpbWUubm93Jyl9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19 */"))
    }, (0, _core.jsx)(_reactDatetime2.default, {
      dateFormat: dateFormat,
      timeFormat: timeFormat,
      value: (0, _moment.default)(value, format),
      onChange: this.handleChange,
      onFocus: setActiveStyle,
      onBlur: this.onBlur,
      inputProps: {
        className: classNameWrapper,
        id: forID
      },
      utc: this.pickerUtc
    }), (0, _core.jsx)("div", {
      css: _ref
    }, (0, _core.jsx)("button", {
      css: /*#__PURE__*/(0, _core.css)(_netlifyCmsUiDefault.buttons.button, " ", _netlifyCmsUiDefault.buttons.default, " ", _netlifyCmsUiDefault.buttons.lightBlue, " ", _netlifyCmsUiDefault.buttons.small, ";label:DateTimeControl;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0pvQiIsImZpbGUiOiIuLi8uLi9zcmMvRGF0ZVRpbWVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGpzeCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVhY3REYXRlVGltZVN0eWxlcyBmcm9tICdyZWFjdC1kYXRldGltZS9jc3MvcmVhY3QtZGF0ZXRpbWUuY3NzJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVUaW1lQ29udHJvbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZmllbGQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBmb3JJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWVXcmFwcGVyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgc2V0QWN0aXZlU3R5bGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc2V0SW5hY3RpdmVTdHlsZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICB9O1xuXG4gIGdldEZvcm1hdHMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBmb3JtYXQgPSBmaWVsZC5nZXQoJ2Zvcm1hdCcpO1xuXG4gICAgLy8gZGF0ZUZvcm1hdCBhbmQgdGltZUZvcm1hdCBhcmUgc3RyaWN0bHkgZm9yIG1vZGlmeWluZ1xuICAgIC8vIGlucHV0IGZpZWxkIHdpdGggdGhlIGRhdGUvdGltZSBwaWNrZXJzXG4gICAgY29uc3QgZGF0ZUZvcm1hdCA9IGZpZWxkLmdldCgnZGF0ZUZvcm1hdCcpO1xuICAgIC8vIHNob3cgdGltZS1waWNrZXI/IGZhbHNlIGhpZGVzIGl0LCB0cnVlIHNob3dzIGl0IHVzaW5nIGRlZmF1bHQgZm9ybWF0XG4gICAgbGV0IHRpbWVGb3JtYXQgPSBmaWVsZC5nZXQoJ3RpbWVGb3JtYXQnKTtcbiAgICBpZiAodHlwZW9mIHRpbWVGb3JtYXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aW1lRm9ybWF0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0LFxuICAgICAgZGF0ZUZvcm1hdCxcbiAgICAgIHRpbWVGb3JtYXQsXG4gICAgfTtcbiAgfVxuXG4gIGdldERlZmF1bHRWYWx1ZSgpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGZpZWxkLmdldCgnZGVmYXVsdCcpO1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cblxuICBnZXRQaWNrZXJVdGMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWNrZXJVdGMgPSBmaWVsZC5nZXQoJ3BpY2tlclV0YycpO1xuICAgIHJldHVybiBwaWNrZXJVdGM7XG4gIH1cblxuICBmb3JtYXRzID0gdGhpcy5nZXRGb3JtYXRzKCk7XG4gIGRlZmF1bHRWYWx1ZSA9IHRoaXMuZ2V0RGVmYXVsdFZhbHVlKCk7XG4gIHBpY2tlclV0YyA9IHRoaXMuZ2V0UGlja2VyVXRjKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY3VycmVudCBkYXRlIGFzIGRlZmF1bHQgdmFsdWUgaWYgbm8gdmFsdWUgaXMgcHJvdmlkZWQgYW5kIGRlZmF1bHQgaXMgYWJzZW50LiBBblxuICAgICAqIGVtcHR5IGRlZmF1bHQgc3RyaW5nIG1lYW5zIHRoZSB2YWx1ZSBpcyBpbnRlbnRpb25hbGx5IGJsYW5rLlxuICAgICAqL1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UodGhpcy5kZWZhdWx0VmFsdWUgPT09IHVuZGVmaW5lZCA/IG5ldyBEYXRlKCkgOiB0aGlzLmRlZmF1bHRWYWx1ZSk7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cblxuICAvLyBEYXRlIGlzIHZhbGlkIGlmIGRhdGV0aW1lIGlzIGEgbW9tZW50IG9yIERhdGUgb2JqZWN0IG90aGVyd2lzZSBpdCdzIGEgc3RyaW5nLlxuICAvLyBIYW5kbGUgdGhlIGVtcHR5IGNhc2UsIGlmIHRoZSB1c2VyIHdhbnRzIHRvIGVtcHR5IHRoZSBmaWVsZC5cbiAgaXNWYWxpZERhdGUgPSBkYXRldGltZSA9PlxuICAgIG1vbWVudC5pc01vbWVudChkYXRldGltZSkgfHwgZGF0ZXRpbWUgaW5zdGFuY2VvZiBEYXRlIHx8IGRhdGV0aW1lID09PSAnJztcblxuICBoYW5kbGVDaGFuZ2UgPSBkYXRldGltZSA9PiB7XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBkYXRlIG9ubHkgaWYgaXQgaXMgdmFsaWQuXG4gICAgICovXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIC8qKlxuICAgICAqIFByb2R1Y2UgYSBmb3JtYXR0ZWQgc3RyaW5nIG9ubHkgaWYgYSBmb3JtYXQgaXMgc2V0IGluIHRoZSBjb25maWcuXG4gICAgICogT3RoZXJ3aXNlIHByb2R1Y2UgYSBkYXRlIG9iamVjdC5cbiAgICAgKi9cbiAgICBpZiAoZm9ybWF0KSB7XG4gICAgICBjb25zdCBmb3JtYXR0ZWRWYWx1ZSA9IGRhdGV0aW1lID8gbW9tZW50KGRhdGV0aW1lKS5mb3JtYXQoZm9ybWF0KSA6ICcnO1xuICAgICAgb25DaGFuZ2UoZm9ybWF0dGVkVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IG1vbWVudC5pc01vbWVudChkYXRldGltZSkgPyBkYXRldGltZS50b0RhdGUoKSA6IGRhdGV0aW1lO1xuICAgICAgb25DaGFuZ2UodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBvbkJsdXIgPSBkYXRldGltZSA9PiB7XG4gICAgY29uc3QgeyBzZXRJbmFjdGl2ZVN0eWxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKGRhdGV0aW1lKSkge1xuICAgICAgY29uc3QgcGFyc2VkRGF0ZSA9IG1vbWVudChkYXRldGltZSk7XG5cbiAgICAgIGlmIChwYXJzZWREYXRlLmlzVmFsaWQoKSkge1xuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZShkYXRldGltZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWxlcnQoJ1RoZSBkYXRlIHlvdSBlbnRlcmVkIGlzIGludmFsaWQuJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2V0SW5hY3RpdmVTdHlsZSgpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGZvcklELCB2YWx1ZSwgY2xhc3NOYW1lV3JhcHBlciwgc2V0QWN0aXZlU3R5bGUsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBmb3JtYXQsIGRhdGVGb3JtYXQsIHRpbWVGb3JtYXQgfSA9IHRoaXMuZm9ybWF0cztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICR7cmVhY3REYXRlVGltZVN0eWxlc307XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBgfVxuICAgICAgPlxuICAgICAgICA8RGF0ZVRpbWVcbiAgICAgICAgICBkYXRlRm9ybWF0PXtkYXRlRm9ybWF0fVxuICAgICAgICAgIHRpbWVGb3JtYXQ9e3RpbWVGb3JtYXR9XG4gICAgICAgICAgdmFsdWU9e21vbWVudCh2YWx1ZSwgZm9ybWF0KX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgb25Gb2N1cz17c2V0QWN0aXZlU3R5bGV9XG4gICAgICAgICAgb25CbHVyPXt0aGlzLm9uQmx1cn1cbiAgICAgICAgICBpbnB1dFByb3BzPXt7IGNsYXNzTmFtZTogY2xhc3NOYW1lV3JhcHBlciwgaWQ6IGZvcklEIH19XG4gICAgICAgICAgdXRjPXt0aGlzLnBpY2tlclV0Y31cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICR7YnV0dG9ucy5idXR0b259XG4gICAgICAgICAgICAgICR7YnV0dG9ucy5kZWZhdWx0fVxuICAgICAgICAgICAgICAke2J1dHRvbnMubGlnaHRCbHVlfVxuICAgICAgICAgICAgICAke2J1dHRvbnMuc21hbGx9XG4gICAgICAgICAgYH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UobW9tZW50KCkpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnZWRpdG9yLmVkaXRvcldpZGdldHMuZGF0ZXRpbWUubm93Jyl9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19 */")),
      onClick: () => {
        this.handleChange((0, _moment.default)());
      }
    }, t('editor.editorWidgets.datetime.now'))));
  }

}

exports.default = DateTimeControl;

_defineProperty(DateTimeControl, "propTypes", {
  field: _propTypes.default.object.isRequired,
  forID: _propTypes.default.string,
  onChange: _propTypes.default.func.isRequired,
  classNameWrapper: _propTypes.default.string.isRequired,
  setActiveStyle: _propTypes.default.func.isRequired,
  setInactiveStyle: _propTypes.default.func.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string])
});